{"dependencies":[{"name":"/Users/codygreen/codefellows/401/labs/42-pagination/lab-cody/node_modules/mquery/package.json","includedInParent":true,"mtime":1516470436000},{"name":"sliced","loc":{"line":7,"column":20}},{"name":"assert","loc":{"line":8,"column":21}},{"name":"util","loc":{"line":9,"column":19}},{"name":"./utils","loc":{"line":10,"column":20}},{"name":"debug","loc":{"line":11,"column":20}},{"name":"./permissions","loc":{"line":2977,"column":28}},{"name":"./env","loc":{"line":3034,"column":20}},{"name":"./collection","loc":{"line":3035,"column":27}},{"name":"./collection/collection","loc":{"line":3036,"column":31}},{"name":"bluebird","loc":{"line":3037,"column":24}}],"generated":{"js":"'use strict';\n\n/**\n * Dependencies\n */\n\nvar slice = require('sliced')\nvar assert = require('assert')\nvar util = require('util')\nvar utils = require('./utils')\nvar debug = require('debug')('mquery');\n\n/**\n * Query constructor used for building queries.\n *\n * ####Example:\n *\n *     var query = new Query({ name: 'mquery' });\n *     query.setOptions({ collection: moduleCollection })\n *     query.where('age').gte(21).exec(callback);\n *\n * @param {Object} [criteria]\n * @param {Object} [options]\n * @api public\n */\n\nfunction Query (criteria, options) {\n  if (!(this instanceof Query))\n    return new Query(criteria, options);\n\n  var proto = this.constructor.prototype;\n\n  this.op = proto.op || undefined;\n\n  this.options = {};\n  this.setOptions(proto.options);\n\n  this._conditions = proto._conditions\n    ? utils.clone(proto._conditions)\n    : {};\n\n  this._fields = proto._fields\n    ? utils.clone(proto._fields)\n    : undefined;\n\n  this._update = proto._update\n    ? utils.clone(proto._update)\n    : undefined;\n\n  this._path = proto._path || undefined;\n  this._distinct = proto._distinct || undefined;\n  this._collection = proto._collection || undefined;\n  this._traceFunction = proto._traceFunction || undefined;\n\n  if (options) {\n    this.setOptions(options);\n  }\n\n  if (criteria) {\n    if (criteria.find && criteria.remove && criteria.update) {\n      // quack quack!\n      this.collection(criteria);\n    } else {\n      this.find(criteria);\n    }\n  }\n}\n\n/**\n * This is a parameter that the user can set which determines if mquery\n * uses $within or $geoWithin for queries. It defaults to true which\n * means $geoWithin will be used. If using MongoDB < 2.4 you should\n * set this to false.\n *\n * @api public\n * @property use$geoWithin\n */\n\nvar $withinCmd = '$geoWithin';\nObject.defineProperty(Query, 'use$geoWithin', {\n    get: function ( ) { return $withinCmd == '$geoWithin' }\n  , set: function (v) {\n      if (true === v) {\n        // mongodb >= 2.4\n        $withinCmd = '$geoWithin';\n      } else {\n        $withinCmd = '$within';\n      }\n    }\n});\n\n/**\n * Converts this query to a constructor function with all arguments and options retained.\n *\n * ####Example\n *\n *     // Create a query that will read documents with a \"video\" category from\n *     // `aCollection` on the primary node in the replica-set unless it is down,\n *     // in which case we'll read from a secondary node.\n *     var query = mquery({ category: 'video' })\n *     query.setOptions({ collection: aCollection, read: 'primaryPreferred' });\n *\n *     // create a constructor based off these settings\n *     var Video = query.toConstructor();\n *\n *     // Video is now a subclass of mquery() and works the same way but with the\n *     // default query parameters and options set.\n *\n *     // run a query with the previous settings but filter for movies with names\n *     // that start with \"Life\".\n *     Video().where({ name: /^Life/ }).exec(cb);\n *\n * @return {Query} new Query\n * @api public\n */\n\nQuery.prototype.toConstructor = function toConstructor () {\n  function CustomQuery (criteria, options) {\n    if (!(this instanceof CustomQuery))\n      return new CustomQuery(criteria, options);\n    Query.call(this, criteria, options);\n  }\n\n  utils.inherits(CustomQuery, Query);\n\n  // set inherited defaults\n  var p = CustomQuery.prototype;\n\n  p.options = {};\n  p.setOptions(this.options);\n\n  p.op = this.op;\n  p._conditions = utils.clone(this._conditions);\n  p._fields = utils.clone(this._fields);\n  p._update = utils.clone(this._update);\n  p._path = this._path;\n  p._distinct = this._distinct;\n  p._collection = this._collection;\n  p._traceFunction = this._traceFunction;\n\n  return CustomQuery;\n}\n\n/**\n * Sets query options.\n *\n * ####Options:\n *\n * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *\n * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *\n * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *\n * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *\n * - [maxScan](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan) *\n * - [maxTime](http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS) *\n * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *\n * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *\n * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *\n * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *\n * - [slaveOk](http://docs.mongodb.org/manual/applications/replication/#read-preference) *\n * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)\n * - collection the collection to query against\n *\n * _* denotes a query helper method is also available_\n *\n * @param {Object} options\n * @api public\n */\n\nQuery.prototype.setOptions = function (options) {\n  if (!(options && utils.isObject(options)))\n    return this;\n\n  // set arbitrary options\n  var methods = utils.keys(options)\n    , method\n\n  for (var i = 0; i < methods.length; ++i) {\n    method = methods[i];\n\n    // use methods if exist (safer option manipulation)\n    if ('function' == typeof this[method]) {\n      var args = utils.isArray(options[method])\n        ? options[method]\n        : [options[method]];\n      this[method].apply(this, args)\n    } else {\n      this.options[method] = options[method];\n    }\n  }\n\n  return this;\n}\n\n/**\n * Sets this Querys collection.\n *\n * @param {Collection} coll\n * @return {Query} this\n */\n\nQuery.prototype.collection = function collection (coll) {\n  this._collection = new Query.Collection(coll);\n\n  return this;\n}\n\n/**\n * Specifies a `$where` condition\n *\n * Use `$where` when you need to select documents using a JavaScript expression.\n *\n * ####Example\n *\n *     query.$where('this.comments.length > 10 || this.name.length > 5')\n *\n *     query.$where(function () {\n *       return this.comments.length > 10 || this.name.length > 5;\n *     })\n *\n * @param {String|Function} js javascript string or function\n * @return {Query} this\n * @memberOf Query\n * @method $where\n * @api public\n */\n\nQuery.prototype.$where = function (js) {\n  this._conditions.$where = js;\n  return this;\n}\n\n/**\n * Specifies a `path` for use with chaining.\n *\n * ####Example\n *\n *     // instead of writing:\n *     User.find({age: {$gte: 21, $lte: 65}}, callback);\n *\n *     // we can instead write:\n *     User.where('age').gte(21).lte(65);\n *\n *     // passing query conditions is permitted\n *     User.find().where({ name: 'vonderful' })\n *\n *     // chaining\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^vonderful/i)\n *     .where('friends').slice(10)\n *     .exec(callback)\n *\n * @param {String} [path]\n * @param {Object} [val]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.where = function () {\n  if (!arguments.length) return this;\n  if (!this.op) this.op = 'find';\n\n  var type = typeof arguments[0];\n\n  if ('string' == type) {\n    this._path = arguments[0];\n\n    if (2 === arguments.length) {\n      this._conditions[this._path] = arguments[1];\n    }\n\n    return this;\n  }\n\n  if ('object' == type && !Array.isArray(arguments[0])) {\n    return this.merge(arguments[0]);\n  }\n\n  throw new TypeError('path must be a string or object');\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n *\n * ####Example\n *\n *     User.where('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.equals = function equals (val) {\n  this._ensurePath('equals');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n * This is alias of `equals`\n *\n * ####Example\n *\n *     User.where('age').eq(49);\n *\n *     // is the same as\n *\n *     User.shere('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.eq = function eq (val) {\n  this._ensurePath('eq');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies arguments for an `$or` condition.\n *\n * ####Example\n *\n *     query.or([{ color: 'red' }, { status: 'emergency' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.or = function or (array) {\n  var or = this._conditions.$or || (this._conditions.$or = []);\n  if (!utils.isArray(array)) array = [array];\n  or.push.apply(or, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$nor` condition.\n *\n * ####Example\n *\n *     query.nor([{ color: 'green' }, { status: 'ok' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.nor = function nor (array) {\n  var nor = this._conditions.$nor || (this._conditions.$nor = []);\n  if (!utils.isArray(array)) array = [array];\n  nor.push.apply(nor, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$and` condition.\n *\n * ####Example\n *\n *     query.and([{ color: 'green' }, { status: 'ok' }])\n *\n * @see $and http://docs.mongodb.org/manual/reference/operator/and/\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.and = function and (array) {\n  var and = this._conditions.$and || (this._conditions.$and = []);\n  if (!Array.isArray(array)) array = [array];\n  and.push.apply(and, array);\n  return this;\n}\n\n/**\n * Specifies a $gt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * ####Example\n *\n *     Thing.find().where('age').gt(21)\n *\n *     // or\n *     Thing.find().gt('age', 21)\n *\n * @method gt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $gte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method gte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $ne query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method ne\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $in query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method in\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $nin query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method nin\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $all query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method all\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $size query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method size\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $regex query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method regex\n * @memberOf Query\n * @param {String} [path]\n * @param {String|RegExp} val\n * @api public\n */\n\n/**\n * Specifies a $maxDistance query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method maxDistance\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/*!\n * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance\n *\n *     Thing.where('type').nin(array)\n */\n\n'gt gte lt lte ne in nin all regex size maxDistance minDistance'.split(' ').forEach(function ($conditional) {\n  Query.prototype[$conditional] = function () {\n    var path, val;\n\n    if (1 === arguments.length) {\n      this._ensurePath($conditional);\n      val = arguments[0];\n      path = this._path;\n    } else {\n      val = arguments[1];\n      path = arguments[0];\n    }\n\n    var conds = this._conditions[path] === null || typeof this._conditions[path] === 'object' ?\n      this._conditions[path] :\n      (this._conditions[path] = {});\n    conds['$' + $conditional] = val;\n    return this;\n  };\n})\n\n/**\n * Specifies a `$mod` condition\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.mod = function () {\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('mod')\n    val = arguments[0];\n    path = this._path;\n  } else if (2 === arguments.length && !utils.isArray(arguments[1])) {\n    this._ensurePath('mod')\n    val = slice(arguments);\n    path = this._path;\n  } else if (3 === arguments.length) {\n    val = slice(arguments, 1);\n    path = arguments[0];\n  } else {\n    val = arguments[1];\n    path = arguments[0];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$mod = val;\n  return this;\n}\n\n/**\n * Specifies an `$exists` condition\n *\n * ####Example\n *\n *     // { name: { $exists: true }}\n *     Thing.where('name').exists()\n *     Thing.where('name').exists(true)\n *     Thing.find().exists('name')\n *\n *     // { name: { $exists: false }}\n *     Thing.where('name').exists(false);\n *     Thing.find().exists('name', false);\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.exists = function () {\n  var path, val;\n\n  if (0 === arguments.length) {\n    this._ensurePath('exists');\n    path = this._path;\n    val = true;\n  } else if (1 === arguments.length) {\n    if ('boolean' === typeof arguments[0]) {\n      this._ensurePath('exists');\n      path = this._path;\n      val = arguments[0];\n    } else {\n      path = arguments[0];\n      val = true;\n    }\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$exists = val;\n  return this;\n}\n\n/**\n * Specifies an `$elemMatch` condition\n *\n * ####Example\n *\n *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n *\n *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n *\n *     query.elemMatch('comment', function (elem) {\n *       elem.where('author').equals('autobot');\n *       elem.where('votes').gte(5);\n *     })\n *\n *     query.where('comment').elemMatch(function (elem) {\n *       elem.where({ author: 'autobot' });\n *       elem.where('votes').gte(5);\n *     })\n *\n * @param {String|Object|Function} path\n * @param {Object|Function} criteria\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.elemMatch = function () {\n  if (null == arguments[0])\n    throw new TypeError(\"Invalid argument\");\n\n  var fn, path, criteria;\n\n  if ('function' === typeof arguments[0]) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    fn = arguments[0];\n  } else if (utils.isObject(arguments[0])) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    criteria = arguments[0];\n  } else if ('function' === typeof arguments[1]) {\n    path = arguments[0];\n    fn = arguments[1];\n  } else if (arguments[1] && utils.isObject(arguments[1])) {\n    path = arguments[0];\n    criteria = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (fn) {\n    criteria = new Query;\n    fn(criteria);\n    criteria = criteria._conditions;\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$elemMatch = criteria;\n  return this;\n}\n\n// Spatial queries\n\n/**\n * Sugar for geo-spatial queries.\n *\n * ####Example\n *\n *     query.within().box()\n *     query.within().circle()\n *     query.within().geometry()\n *\n *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\n *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\n *     query.where('loc').within({ polygon: [[],[],[],[]] });\n *\n *     query.where('loc').within([], [], []) // polygon\n *     query.where('loc').within([], []) // box\n *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n *\n * ####NOTE:\n *\n * Must be used after `where()`.\n *\n * @memberOf Query\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.within = function within () {\n  // opinionated, must be used after where\n  this._ensurePath('within');\n  this._geoComparison = $withinCmd;\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  if (2 === arguments.length) {\n    return this.box.apply(this, arguments);\n  } else if (2 < arguments.length) {\n    return this.polygon.apply(this, arguments);\n  }\n\n  var area = arguments[0];\n\n  if (!area)\n    throw new TypeError('Invalid argument');\n\n  if (area.center)\n    return this.circle(area);\n\n  if (area.box)\n    return this.box.apply(this, area.box);\n\n  if (area.polygon)\n    return this.polygon.apply(this, area.polygon);\n\n  if (area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a $box condition\n *\n * ####Example\n *\n *     var lowerLeft = [40.73083, -73.99756]\n *     var upperRight= [40.741404,  -73.988135]\n *\n *     query.where('loc').within().box(lowerLeft, upperRight)\n *     query.box('loc', lowerLeft, upperRight )\n *\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see Query#within #query_Query-within\n * @param {String} path\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.box = function () {\n  var path, box;\n\n  if (3 === arguments.length) {\n    // box('loc', [], [])\n    path = arguments[0];\n    box = [arguments[1], arguments[2]];\n  } else if (2 === arguments.length) {\n    // box([], [])\n    this._ensurePath('box');\n    path = this._path;\n    box = [arguments[0], arguments[1]];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$box': box  };\n  return this;\n}\n\n/**\n * Specifies a $polygon condition\n *\n * ####Example\n *\n *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])\n *     query.polygon('loc', [10,20], [13, 25], [7,15])\n *\n * @param {String|Array} [path]\n * @param {Array|Object} [val]\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.polygon = function () {\n  var val, path;\n\n  if ('string' == typeof arguments[0]) {\n    // polygon('loc', [],[],[])\n    path = arguments[0];\n    val = slice(arguments, 1);\n  } else {\n    // polygon([],[],[])\n    this._ensurePath('polygon');\n    path = this._path;\n    val = slice(arguments);\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$polygon': val };\n  return this;\n}\n\n/**\n * Specifies a $center or $centerSphere condition.\n *\n * ####Example\n *\n *     var area = { center: [50, 50], radius: 10, unique: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n *     // for spherical calculations\n *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n * @param {String} [path]\n * @param {Object} area\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.circle = function () {\n  var path, val;\n\n  if (1 === arguments.length) {\n    this._ensurePath('circle');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!('radius' in val && val.center))\n    throw new Error('center and radius are required');\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$centerSphere'\n    : '$center';\n\n  var wKey = this._geoComparison || $withinCmd;\n  conds[wKey] = {};\n  conds[wKey][type] = [val.center, val.radius];\n\n  if ('unique' in val)\n    conds[wKey].$uniqueDocs = !! val.unique;\n\n  return this;\n}\n\n/**\n * Specifies a `$near` or `$nearSphere` condition\n *\n * These operators return documents sorted by distance.\n *\n * ####Example\n *\n *     query.where('loc').near({ center: [10, 10] });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });\n *     query.near('loc', { center: [10, 10], maxDistance: 5 });\n *     query.near({ center: { type: 'Point', coordinates: [..] }})\n *     query.near().geometry({ type: 'Point', coordinates: [..] })\n *\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.near = function near () {\n  var path, val;\n\n  this._geoComparison = '$near';\n\n  if (0 === arguments.length) {\n    return this;\n  } else if (1 === arguments.length) {\n    this._ensurePath('near');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!val.center) {\n    throw new Error('center is required');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$nearSphere'\n    : '$near';\n\n  // center could be a GeoJSON object or an Array\n  if (Array.isArray(val.center)) {\n    conds[type] = val.center;\n\n    var radius = 'maxDistance' in val\n      ? val.maxDistance\n      : null;\n\n    if (null != radius) {\n      conds.$maxDistance = radius;\n    }\n    if (null != val.minDistance) {\n      conds.$minDistance = val.minDistance;\n    }\n  } else {\n    // GeoJSON?\n    if (val.center.type != 'Point' || !Array.isArray(val.center.coordinates)) {\n      throw new Error(util.format(\"Invalid GeoJSON specified for %s\", type));\n    }\n    conds[type] = { $geometry : val.center };\n\n    // MongoDB 2.6 insists on maxDistance being in $near / $nearSphere\n    if ('maxDistance' in val) {\n      conds[type]['$maxDistance'] = val.maxDistance;\n    }\n    if ('minDistance' in val) {\n      conds[type]['$minDistance'] = val.minDistance;\n    }\n  }\n\n  return this;\n}\n\n/**\n * Declares an intersects query for `geometry()`.\n *\n * ####Example\n *\n *     query.where('path').intersects().geometry({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n *     query.where('path').intersects({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n * @param {Object} [arg]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.intersects = function intersects () {\n  // opinionated, must be used after where\n  this._ensurePath('intersects');\n\n  this._geoComparison = '$geoIntersects';\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  var area = arguments[0];\n\n  if (null != area && area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a `$geometry` condition\n *\n * ####Example\n *\n *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\n *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n *\n *     // or\n *     var polyB = [[ 0, 0 ], [ 1, 1 ]]\n *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n *\n *     // or\n *     var polyC = [ 0, 0 ]\n *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n *\n *     // or\n *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n *\n * ####NOTE:\n *\n * `geometry()` **must** come after either `intersects()` or `within()`.\n *\n * The `object` argument must contain `type` and `coordinates` properties.\n * - type {String}\n * - coordinates {Array}\n *\n * The most recent path passed to `where()` is used.\n *\n * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples.\n * @return {Query} this\n * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/\n * @api public\n */\n\nQuery.prototype.geometry = function geometry () {\n  if (!('$within' == this._geoComparison ||\n        '$geoWithin' == this._geoComparison ||\n        '$near' == this._geoComparison ||\n        '$geoIntersects' == this._geoComparison)) {\n    throw new Error('geometry() must come after `within()`, `intersects()`, or `near()');\n  }\n\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('geometry');\n    path = this._path;\n    val = arguments[0];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!(val.type && Array.isArray(val.coordinates))) {\n    throw new TypeError('Invalid argument');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison] = { $geometry: val };\n\n  return this;\n}\n\n// end spatial\n\n/**\n * Specifies which document fields to include or exclude\n *\n * ####String syntax\n *\n * When passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included.\n *\n * ####Example\n *\n *     // include a and b, exclude c\n *     query.select('a b -c');\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     query.select({a: 1, b: 1, c: 0});\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|String} arg\n * @return {Query} this\n * @see SchemaType\n * @api public\n */\n\nQuery.prototype.select = function select () {\n  var arg = arguments[0];\n  if (!arg) return this;\n\n  if (arguments.length !== 1) {\n    throw new Error(\"Invalid select: select only takes 1 argument\");\n  }\n\n  this._validate('select');\n\n  var fields = this._fields || (this._fields = {});\n  var type = typeof arg;\n\n  if (('string' == type || utils.isArgumentsObject(arg)) &&\n    'number' == typeof arg.length || Array.isArray(arg)) {\n    if ('string' == type)\n      arg = arg.split(/\\s+/);\n\n    for (var i = 0, len = arg.length; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var include = '-' == field[0] ? 0 : 1;\n      if (include === 0) field = field.substring(1);\n      fields[field] = include;\n    }\n\n    return this;\n  }\n\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      fields[keys[i]] = arg[keys[i]];\n    }\n    return this;\n  }\n\n  throw new TypeError('Invalid select() argument. Must be string or object.');\n}\n\n/**\n * Specifies a $slice condition for a `path`\n *\n * ####Example\n *\n *     query.slice('comments', 5)\n *     query.slice('comments', -5)\n *     query.slice('comments', [10, 5])\n *     query.where('comments').slice(5)\n *     query.where('comments').slice([-10, 5])\n *\n * @param {String} [path]\n * @param {Number} val number/range of elements to slice\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements\n * @api public\n */\n\nQuery.prototype.slice = function () {\n  if (0 === arguments.length)\n    return this;\n\n  this._validate('slice');\n\n  var path, val;\n\n  if (1 === arguments.length) {\n    var arg = arguments[0];\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      var keys = Object.keys(arg);\n      var numKeys = keys.length;\n      for (var i = 0; i < numKeys; ++i) {\n        this.slice(keys[i], arg[keys[i]]);\n      }\n      return this;\n    }\n    this._ensurePath('slice');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    if ('number' === typeof arguments[0]) {\n      this._ensurePath('slice');\n      path = this._path;\n      val = slice(arguments);\n    } else {\n      path = arguments[0];\n      val = arguments[1];\n    }\n  } else if (3 === arguments.length) {\n    path = arguments[0];\n    val = slice(arguments, 1);\n  }\n\n  var myFields = this._fields || (this._fields = {});\n  myFields[path] = { '$slice': val };\n  return this;\n}\n\n/**\n * Sets the sort order\n *\n * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * ####Example\n *\n *     // these are equivalent\n *     query.sort({ field: 'asc', test: -1 });\n *     query.sort('field -test');\n *     query.sort([['field', 1], ['test', -1]]);\n *\n * ####Note\n *\n *  - The array syntax `.sort([['field', 1], ['test', -1]])` can only be used with [mongodb driver >= 2.0.46](https://github.com/mongodb/node-mongodb-native/blob/2.1/HISTORY.md#2046-2015-10-15).\n *  - Cannot be used with `distinct()`\n *\n * @param {Object|String|Array} arg\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.sort = function (arg) {\n  if (!arg) return this;\n  var len;\n\n  this._validate('sort');\n\n  var type = typeof arg;\n\n  // .sort([['field', 1], ['test', -1]])\n  if (Array.isArray(arg)) {\n    len = arg.length;\n    for (var i = 0; i < arg.length; ++i) {\n      if (!Array.isArray(arg[i])) {\n        throw new Error('Invalid sort() argument, must be array of arrays');\n      }\n      _pushArr(this.options, arg[i][0], arg[i][1]);\n    }\n    return this;\n  }\n\n  // .sort('field -test')\n  if (1 === arguments.length && 'string' == type) {\n    arg = arg.split(/\\s+/);\n    len = arg.length;\n    for (var i = 0; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var ascend = '-' == field[0] ? -1 : 1;\n      if (ascend === -1) field = field.substring(1);\n      push(this.options, field, ascend);\n    }\n\n    return this;\n  }\n\n  // .sort({ field: 1, test: -1 })\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      var field = keys[i];\n      push(this.options, field, arg[field]);\n    }\n\n    return this;\n  }\n\n  if (typeof Map !== 'undefined' && arg instanceof Map) {\n    _pushMap(this.options, arg);\n    return this;\n  }\n\n  throw new TypeError('Invalid sort() argument. Must be a string, object, or array.');\n}\n\n/*!\n * @ignore\n */\n\nfunction push (opts, field, value) {\n  if (Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n\n  if (value && value.$meta) {\n    var s = opts.sort || (opts.sort = {});\n    s[field] = { $meta : value.$meta };\n    return;\n  }\n\n  var val = String(value || 1).toLowerCase();\n  if (!/^(?:ascending|asc|descending|desc|1|-1)$/.test(val)) {\n    if (utils.isArray(value)) value = '['+value+']';\n    throw new TypeError('Invalid sort value: {' + field + ': ' + value + ' }');\n  }\n  // store `sort` in a sane format\n  var s = opts.sort || (opts.sort = {});\n  var valueStr = value.toString()\n                  .replace(\"asc\", \"1\")\n                  .replace(\"ascending\", \"1\")\n                  .replace(\"desc\", \"-1\")\n                  .replace(\"descending\", \"-1\");\n  s[field] = parseInt(valueStr, 10);\n}\n\nfunction _pushArr (opts, field, value) {\n  opts.sort = opts.sort || [];\n  if (!Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n  var valueStr = value.toString()\n    .replace(\"asc\", \"1\")\n    .replace(\"ascending\", \"1\")\n    .replace(\"desc\", \"-1\")\n    .replace(\"descending\", \"-1\");\n  opts.sort.push([field, value]);\n}\n\nfunction _pushMap (opts, map) {\n  opts.sort = opts.sort || new Map();\n  if (!(opts.sort instanceof Map)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or \" +\n      \"object or map consistently\");\n  }\n  map.forEach(function(value, key) {\n    var valueStr = value.toString()\n      .replace(\"asc\", \"1\")\n      .replace(\"ascending\", \"1\")\n      .replace(\"desc\", \"-1\")\n      .replace(\"descending\", \"-1\");\n    opts.sort.set(key, valueStr);\n  });\n}\n\n/**\n * Specifies the limit option.\n *\n * ####Example\n *\n *     query.limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method limit\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the skip option.\n *\n * ####Example\n *\n *     query.skip(100).limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method skip\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the maxScan option.\n *\n * ####Example\n *\n *     query.maxScan(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method maxScan\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan\n * @api public\n */\n/**\n * Specifies the batchSize option.\n *\n * ####Example\n *\n *     query.batchSize(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method batchSize\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the `comment` option.\n *\n * ####Example\n *\n *     query.comment('login query')\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method comment\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment\n * @api public\n */\n\n/*!\n * limit, skip, maxScan, batchSize, comment\n *\n * Sets these associated options.\n *\n *     query.comment('feed query');\n */\n\n;['limit', 'skip', 'maxScan', 'batchSize', 'comment'].forEach(function (method) {\n  Query.prototype[method] = function (v) {\n    this._validate(method);\n    this.options[method] = v;\n    return this;\n  };\n})\n\n/**\n * Specifies the maxTimeMS option.\n *\n * ####Example\n *\n *     query.maxTime(100)\n *\n * @method maxTime\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS\n * @api public\n */\n\nQuery.prototype.maxTime = function (v) {\n  this._validate('maxTime');\n  this.options.maxTimeMS = v;\n  return this;\n};\n\n/**\n * Specifies this query as a `snapshot` query.\n *\n * ####Example\n *\n *     mquery().snapshot() // true\n *     mquery().snapshot(true)\n *     mquery().snapshot(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.snapshot = function () {\n  this._validate('snapshot');\n\n  this.options.snapshot = arguments.length\n    ? !! arguments[0]\n    : true\n\n  return this;\n}\n\n/**\n * Sets query hints.\n *\n * ####Example\n *\n *     query.hint({ indexA: 1, indexB: -1});\n *     query.hint('indexA_1_indexB_1');\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|string} val a hint object or the index name\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint\n * @api public\n */\n\nQuery.prototype.hint = function () {\n  if (0 === arguments.length) return this;\n\n  this._validate('hint');\n\n  var arg = arguments[0];\n  if (utils.isObject(arg)) {\n    var hint = this.options.hint || (this.options.hint = {});\n\n    // must keep object keys in order so don't use Object.keys()\n    for (var k in arg) {\n      hint[k] = arg[k];\n    }\n\n    return this;\n  }\n  if (typeof arg === 'string') {\n    this.options.hint = arg;\n    return this;\n  }\n\n  throw new TypeError('Invalid hint. ' + arg);\n}\n\n/**\n * Sets the slaveOk option. _Deprecated_ in MongoDB 2.2 in favor of read preferences.\n *\n * ####Example:\n *\n *     query.slaveOk() // true\n *     query.slaveOk(true)\n *     query.slaveOk(false)\n *\n * @deprecated use read() preferences instead if on mongodb >= 2.2\n * @param {Boolean} v defaults to true\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see read()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.slaveOk = function (v) {\n  this.options.slaveOk = arguments.length ? !!v : true;\n  return this;\n}\n\n/**\n * Sets the readPreference option for the query.\n *\n * ####Example:\n *\n *     new Query().read('primary')\n *     new Query().read('p')  // same as primary\n *\n *     new Query().read('primaryPreferred')\n *     new Query().read('pp') // same as primaryPreferred\n *\n *     new Query().read('secondary')\n *     new Query().read('s')  // same as secondary\n *\n *     new Query().read('secondaryPreferred')\n *     new Query().read('sp') // same as secondaryPreferred\n *\n *     new Query().read('nearest')\n *     new Query().read('n')  // same as nearest\n *\n *     // you can also use mongodb.ReadPreference class to also specify tags\n *     new Query().read(mongodb.ReadPreference('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]))\n *\n * ####Preferences:\n *\n *     primary - (default)  Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n *     secondary            Read from secondary if available, otherwise error.\n *     primaryPreferred     Read from primary if available, otherwise a secondary.\n *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary.\n *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n *\n * Aliases\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * Read more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences).\n *\n * @param {String|ReadPreference} pref one of the listed preference options or their aliases\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.read = function (pref) {\n  if (arguments.length > 1 && !Query.prototype.read.deprecationWarningIssued) {\n    console.error(\"Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead.\");\n    Query.prototype.read.deprecationWarningIssued = true;\n  }\n  this.options.readPreference = utils.readPref(pref);\n  return this;\n}\n\n/**\n * Sets tailable option.\n *\n * ####Example\n *\n *     query.tailable() <== true\n *     query.tailable(true)\n *     query.tailable(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Boolean} v defaults to true\n * @see mongodb http://www.mongodb.org/display/DOCS/Tailable+Cursors\n * @api public\n */\n\nQuery.prototype.tailable = function () {\n  this._validate('tailable');\n\n  this.options.tailable = arguments.length\n    ? !! arguments[0]\n    : true;\n\n  return this;\n}\n\n/**\n * Merges another Query or conditions object into this one.\n *\n * When a Query is passed, conditions, field selection and options are merged.\n *\n * @param {Query|Object} source\n * @return {Query} this\n */\n\nQuery.prototype.merge = function (source) {\n  if (!source)\n    return this;\n\n  if (!Query.canMerge(source))\n    throw new TypeError('Invalid argument. Expected instanceof mquery or plain object');\n\n  if (source instanceof Query) {\n    // if source has a feature, apply it to ourselves\n\n    if (source._conditions) {\n      utils.merge(this._conditions, source._conditions);\n    }\n\n    if (source._fields) {\n      this._fields || (this._fields = {});\n      utils.merge(this._fields, source._fields);\n    }\n\n    if (source.options) {\n      this.options || (this.options = {});\n      utils.merge(this.options, source.options);\n    }\n\n    if (source._update) {\n      this._update || (this._update = {});\n      utils.mergeClone(this._update, source._update);\n    }\n\n    if (source._distinct) {\n      this._distinct = source._distinct;\n    }\n\n    return this;\n  }\n\n  // plain object\n  utils.merge(this._conditions, source);\n\n  return this;\n}\n\n/**\n * Finds documents.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.find()\n *     query.find(callback)\n *     query.find({ name: 'Burning Lights' }, callback)\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.find = function (criteria, callback) {\n  this.op = 'find';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('find', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('find', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.find(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Returns the query cursor\n *\n * ####Examples\n *\n *     query.find().cursor();\n *     query.cursor({ name: 'Burning Lights' });\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Object} cursor\n * @api public\n */\n\nQuery.prototype.cursor = function cursor (criteria) {\n  if (this.op) {\n    if (this.op !== 'find') {\n      throw new TypeError(\".cursor only support .find method\");\n    }\n  } else {\n    this.find(criteria);\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('findCursor', this._collection.collectionName, conds, options);\n  return this._collection.findCursor(conds, options);\n}\n\n/**\n * Executes the query as a findOne() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.findOne().where('name', /^Burning/);\n *\n *     query.findOne({ name: /^Burning/ })\n *\n *     query.findOne({ name: /^Burning/ }, callback); // executes\n *\n *     query.findOne(function (err, doc) {\n *       if (err) return handleError(err);\n *       if (doc) {\n *         // doc may be null if no document matched\n *\n *       }\n *     });\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOne = function (criteria, callback) {\n  this.op = 'findOne';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec();\n\n  debug('findOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('findOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.findOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Exectues the query as a count() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.count().where('color', 'black').exec(callback);\n *\n *     query.count({ color: 'black' }).count(callback)\n *\n *     query.count({ color: 'black' }, callback)\n *\n *     query.where('color', 'black').count(function (err, count) {\n *       if (err) return handleError(err);\n *       console.log('there are %d kittens', count);\n *     })\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count\n * @api public\n */\n\nQuery.prototype.count = function (criteria, callback) {\n  this.op = 'count';\n  this._validate();\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('count', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('count', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.count(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Declares or executes a distinct() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     distinct(criteria, field, fn)\n *     distinct(criteria, field)\n *     distinct(field, fn)\n *     distinct(field)\n *     distinct(fn)\n *     distinct()\n *\n * @param {Object|Query} [criteria]\n * @param {String} [field]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Distinct\n * @api public\n */\n\nQuery.prototype.distinct = function (criteria, field, callback) {\n  this.op = 'distinct';\n  this._validate();\n\n  if (!callback) {\n    switch (typeof field) {\n      case 'function':\n        callback = field;\n        if ('string' == typeof criteria) {\n          field = criteria;\n          criteria = undefined;\n        }\n        break;\n      case 'undefined':\n      case 'string':\n        break;\n      default:\n        throw new TypeError('Invalid `field` argument. Must be string or function')\n        break;\n    }\n\n    switch (typeof criteria) {\n      case 'function':\n        callback = criteria;\n        criteria = field = undefined;\n        break;\n      case 'string':\n        field = criteria;\n        criteria = undefined;\n        break;\n    }\n  }\n\n  if ('string' == typeof field) {\n    this._distinct = field;\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) {\n    return this;\n  }\n\n  if (!this._distinct) {\n    throw new Error('No value for `distinct` has been declared');\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('distinct', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('distinct', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.distinct(this._distinct, conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as an update() operation. By default,\n * `update()` only modifies the _first_ document that matches `criteria`.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     mquery({ _id: id }).update({ title: 'words' }, ...)\n *\n * becomes\n *\n *     collection.update({ _id: id }, { $set: { title: 'words' }}, ...)\n *\n * ####Note\n *\n * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection.\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call update() and then execute it by using the `exec()` method.\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).update(); // not executed\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).exec(); // executed as unsafe\n *\n *     // keys that are not $atomic ops become $set.\n *     // this executes the same command as the previous example.\n *     q.update({ name: 'bob' }).where({ _id: id }).exec();\n *\n *     var q = mquery(collection).update(); // not executed\n *\n *     // overwriting with empty docs\n *     var q.where({ _id: id }).setOptions({ overwrite: true })\n *     q.update({ }, callback); // executes\n *\n *     // multi update with overwrite to empty doc\n *     var q = mquery(collection).where({ _id: id });\n *     q.setOptions({ multi: true, overwrite: true })\n *     q.update({ });\n *     q.update(callback); // executed\n *\n *     // multi updates\n *     mquery()\n *       .collection(coll)\n *       .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)\n *     // more multi updates\n *     mquery({ })\n *       .collection(coll)\n *       .setOptions({ multi: true })\n *       .update({ $set: { arr: [] }}, callback)\n *\n *     // single update by default\n *     mquery({ email: 'address@example.com' })\n *      .collection(coll)\n *      .update({ $inc: { counter: 1 }}, callback)\n *\n *     // summary\n *     update(criteria, doc, opts, cb) // executes\n *     update(criteria, doc, opts)\n *     update(criteria, doc, cb) // executes\n *     update(criteria, doc)\n *     update(doc, cb) // executes\n *     update(doc)\n *     update(cb) // executes\n *     update(true) // executes (unsafe write)\n *     update()\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.update = function update (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'update', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `updateMany()` operation. Identical\n * to `update()` except `updateMany()` will update _all_ documents that match\n * `criteria`, rather than just the first one.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     // Update every document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateMany = function updateMany (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'updateMany', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `updateOne()` operation. Identical\n * to `update()` except `updateOne()` will _always_ update just one document,\n * regardless of the `multi` option.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     // Update the first document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateOne = function updateOne (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'updateOne', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `replaceOne()` operation. Similar\n * to `updateOne()`, except `replaceOne()` is not allowed to use atomic\n * modifiers (`$set`, `$push`, etc.). Calling `replaceOne()` will always\n * replace the existing doc.\n *\n * ####Example\n *\n *     // Replace the document with `_id` 1 with `{ _id: 1, year: 2017 }`\n *     mquery().replaceOne({ _id: 1 }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.replaceOne = function replaceOne (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  this.setOptions({ overwrite: true });\n  return _update(this, 'replaceOne', criteria, doc, options, force, callback);\n}\n\n\n/*!\n * Internal helper for update, updateMany, updateOne\n */\n\nfunction _update (query, op, criteria, doc, options, force, callback) {\n  query.op = op;\n\n  if (Query.canMerge(criteria)) {\n    query.merge(criteria);\n  }\n\n  if (doc) {\n    query._mergeUpdate(doc);\n  }\n\n  if (utils.isObject(options)) {\n    // { overwrite: true }\n    query.setOptions(options);\n  }\n\n  // we are done if we don't have callback and they are\n  // not forcing an unsafe write.\n  if (!(force || callback)) {\n    return query;\n  }\n\n  if (!query._update ||\n      !query.options.overwrite && 0 === utils.keys(query._update).length) {\n    callback && utils.soon(callback.bind(null, null, 0));\n    return query;\n  }\n\n  options = query._optionsForExec();\n  if (!callback) options.safe = false;\n\n  var criteria = query._conditions;\n  doc = query._updateForExec();\n\n  debug('update', query._collection.collectionName, criteria, doc, options);\n  callback = query._wrapCallback(op, callback, {\n    conditions: criteria\n  , doc: doc\n  , options: options\n  });\n\n  query._collection[op](criteria, doc, options, utils.tick(callback));\n\n  return query;\n}\n\n/**\n * Declare and/or execute this query as a remove() operation.\n *\n * ####Example\n *\n *     mquery(collection).remove({ artist: 'Anne Murray' }, callback)\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call remove() and then execute it by using the `exec()` method.\n *\n *     // not executed\n *     var query = mquery(collection).remove({ name: 'Anne Murray' })\n *\n *     // executed\n *     mquery(collection).remove({ name: 'Anne Murray' }, callback)\n *     mquery(collection).remove({ name: 'Anne Murray' }).remove(callback)\n *\n *     // executed without a callback (unsafe write)\n *     query.exec()\n *\n *     // summary\n *     query.remove(conds, fn); // executes\n *     query.remove(conds)\n *     query.remove(fn) // executes\n *     query.remove()\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.remove = function (criteria, callback) {\n  this.op = 'remove';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n\n  var conds = this._conditions;\n\n  debug('remove', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('remove', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.remove(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a `deleteOne()` operation. Behaves like\n * `remove()`, except for ignores the `justOne` option and always deletes at\n * most one document.\n *\n * ####Example\n *\n *     mquery(collection).deleteOne({ artist: 'Anne Murray' }, callback)\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteOne = function (criteria, callback) {\n  this.op = 'deleteOne';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n  delete options.justOne;\n\n  var conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('deleteOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.deleteOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a `deleteMany()` operation. Behaves like\n * `remove()`, except for ignores the `justOne` option and always deletes\n * _every_ document that matches `criteria`.\n *\n * ####Example\n *\n *     mquery(collection).deleteMany({ artist: 'Anne Murray' }, callback)\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteMany = function (criteria, callback) {\n  this.op = 'deleteMany';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n  delete options.justOne;\n\n  var conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('deleteOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.deleteMany(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     query.findOneAndUpdate(conditions, update, options, callback) // executes\n *     query.findOneAndUpdate(conditions, update, options)  // returns Query\n *     query.findOneAndUpdate(conditions, update, callback) // executes\n *     query.findOneAndUpdate(conditions, update)           // returns Query\n *     query.findOneAndUpdate(update, callback)             // returns Query\n *     query.findOneAndUpdate(update)                       // returns Query\n *     query.findOneAndUpdate(callback)                     // executes\n *     query.findOneAndUpdate()                             // returns Query\n *\n * @param {Object|Query} [query]\n * @param {Object} [doc]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndUpdate = function (criteria, doc, options, callback) {\n  this.op = 'findOneAndUpdate';\n  this._validate();\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = {};\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      options = undefined;\n      break;\n    case 1:\n      if ('function' == typeof criteria) {\n        callback = criteria;\n        criteria = options = doc = undefined;\n      } else {\n        doc = criteria;\n        criteria = options = undefined;\n      }\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  // apply doc\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n  return this._findAndModify('update', callback);\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command.\n *\n * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     A.where().findOneAndRemove(conditions, options, callback) // executes\n *     A.where().findOneAndRemove(conditions, options)  // return Query\n *     A.where().findOneAndRemove(conditions, callback) // executes\n *     A.where().findOneAndRemove(conditions) // returns Query\n *     A.where().findOneAndRemove(callback)   // executes\n *     A.where().findOneAndRemove()           // returns Query\n *\n * @param {Object} [conditions]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nQuery.prototype.findOneAndRemove = function (conditions, options, callback) {\n  this.op = 'findOneAndRemove';\n  this._validate();\n\n  if ('function' == typeof options) {\n    callback = options;\n    options = undefined;\n  } else if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = undefined;\n  }\n\n  // apply conditions\n  if (Query.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  // apply options\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n\n  return this._findAndModify('remove', callback);\n}\n\n/**\n * _findAndModify\n *\n * @param {String} type - either \"remove\" or \"update\"\n * @param {Function} callback\n * @api private\n */\n\nQuery.prototype._findAndModify = function (type, callback) {\n  assert.equal('function', typeof callback);\n\n  var opts = this._optionsForExec()\n    , self = this\n    , fields\n    , sort\n    , doc\n\n  if ('remove' == type) {\n    opts.remove = true;\n  } else {\n    if (!('new' in opts)) opts.new = true;\n    if (!('upsert' in opts)) opts.upsert = false;\n\n    doc = this._updateForExec()\n    if (!doc) {\n      if (opts.upsert) {\n        // still need to do the upsert to empty doc\n        doc = { $set: {} };\n      } else {\n        return this.findOne(callback);\n      }\n    }\n  }\n\n  var fields = this._fieldsForExec();\n  if (fields) {\n    opts.fields = fields;\n  }\n\n  var conds = this._conditions;\n\n  debug('findAndModify', this._collection.collectionName, conds, doc, opts);\n  callback = this._wrapCallback('findAndModify', callback, {\n    conditions: conds\n  , doc: doc\n  , options: opts\n  });\n\n  this._collection\n  .findAndModify(conds, doc, opts, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Wrap callback to add tracing\n *\n * @param {Function} callback\n * @param {Object} [queryInfo]\n * @api private\n */\nQuery.prototype._wrapCallback = function (method, callback, queryInfo) {\n  var traceFunction = this._traceFunction || Query.traceFunction;\n\n  if (traceFunction) {\n    queryInfo.collectionName = this._collection.collectionName;\n\n    var traceCallback = traceFunction &&\n      traceFunction.call(null, method, queryInfo, this);\n\n    var startTime = new Date().getTime();\n\n    return function wrapperCallback (err, result) {\n      if (traceCallback) {\n        var millis = new Date().getTime() - startTime;\n        traceCallback.call(null, err, result, millis);\n      }\n\n      if (callback) {\n        callback.apply(null, arguments);\n      }\n    };\n  }\n\n  return callback;\n}\n\n/**\n * Add trace function that gets called when the query is executed.\n * The function will be called with (method, queryInfo, query) and\n * should return a callback function which will be called\n * with (err, result, millis) when the query is complete.\n *\n * queryInfo is an object containing: {\n *   collectionName: <name of the collection>,\n *   conditions: <query criteria>,\n *   options: <comment, fields, readPreference, etc>,\n *   doc: [document to update, if applicable]\n * }\n *\n * NOTE: Does not trace stream queries.\n *\n * @param {Function} traceFunction\n * @return {Query} this\n * @api public\n */\nQuery.prototype.setTraceFunction = function (traceFunction) {\n  this._traceFunction = traceFunction;\n  return this;\n}\n\n/**\n * Executes the query\n *\n * ####Examples\n *\n *     query.exec();\n *     query.exec(callback);\n *     query.exec('update');\n *     query.exec('find', callback);\n *\n * @param {String|Function} [operation]\n * @param {Function} [callback]\n * @api public\n */\n\nQuery.prototype.exec = function exec (op, callback) {\n  switch (typeof op) {\n    case 'function':\n      callback = op;\n      op = null;\n      break;\n    case 'string':\n      this.op = op;\n      break;\n  }\n\n  assert.ok(this.op, \"Missing query type: (find, update, etc)\");\n\n  if ('update' == this.op || 'remove' == this.op) {\n    callback || (callback = true);\n  }\n\n  var self = this;\n\n  if ('function' == typeof callback) {\n    this[this.op](callback);\n  } else {\n    return new Query.Promise(function(success, error) {\n      self[self.op](function(err, val) {\n        if (err) error(err);\n        else success(val);\n        self = success = error = null;\n      });\n    });\n  }\n}\n\n/**\n * Returns a thunk which when called runs this.exec()\n *\n * The thunk receives a callback function which will be\n * passed to `this.exec()`\n *\n * @return {Function}\n * @api public\n */\n\nQuery.prototype.thunk = function() {\n  var self = this;\n  return function(cb) {\n    self.exec(cb);\n  }\n}\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n *\n * @param {Function} [resolve]\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.then = function(resolve, reject) {\n  var self = this;\n  var promise = new Query.Promise(function(success, error) {\n    self.exec(function(err, val) {\n      if (err) error(err);\n      else success(val);\n      self = success = error = null;\n    });\n  });\n  return promise.then(resolve, reject);\n}\n\n/**\n * Returns a stream for the given find query.\n *\n * @throws Error if operation is not a find\n * @returns {Stream} Node 0.8 style\n */\n\nQuery.prototype.stream = function(streamOptions) {\n  if ('find' != this.op)\n    throw new Error('stream() is only available for find');\n\n  var conds = this._conditions;\n\n  var options = this._optionsForExec()\n  options.fields = this._fieldsForExec()\n\n  debug('stream', this._collection.collectionName, conds, options, streamOptions);\n\n  return this._collection.findStream(conds, options, streamOptions);\n}\n\n/**\n * Determines if field selection has been made.\n *\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selected = function selected () {\n  return !! (this._fields && Object.keys(this._fields).length > 0);\n}\n\n/**\n * Determines if inclusive field selection has been made.\n *\n *     query.selectedInclusively() // false\n *     query.select('name')\n *     query.selectedInclusively() // true\n *     query.selectedExlusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedInclusively = function selectedInclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return false;\n    if (this._fields[key] &&\n        typeof this._fields[key] === 'object' &&\n        this._fields[key].$meta) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines if exclusive field selection has been made.\n *\n *     query.selectedExlusively() // false\n *     query.select('-name')\n *     query.selectedExlusively() // true\n *     query.selectedInclusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedExclusively = function selectedExclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return true;\n  }\n\n  return false;\n}\n\n/**\n * Merges `doc` with the current update object.\n *\n * @param {Object} doc\n */\n\nQuery.prototype._mergeUpdate = function (doc) {\n  if (!this._update) this._update = {};\n  if (doc instanceof Query) {\n    if (doc._update) {\n      utils.mergeClone(this._update, doc._update);\n    }\n  } else {\n    utils.mergeClone(this._update, doc);\n  }\n}\n\n/**\n * Returns default options.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._optionsForExec = function () {\n  var options = utils.clone(this.options);\n  return options;\n}\n\n/**\n * Returns fields selection for this query.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._fieldsForExec = function () {\n  return utils.clone(this._fields);\n}\n\n/**\n * Return an update document with corrected $set operations.\n *\n * @api private\n */\n\nQuery.prototype._updateForExec = function () {\n  var update = utils.clone(this._update)\n    , ops = utils.keys(update)\n    , i = ops.length\n    , ret = {}\n    , hasKeys\n    , val\n\n  while (i--) {\n    var op = ops[i];\n\n    if (this.options.overwrite) {\n      ret[op] = update[op];\n      continue;\n    }\n\n    if ('$' !== op[0]) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (update.$set) {\n          ret.$set = update.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = update[op];\n      ops.splice(i, 1);\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if ('$set' === op) {\n      if (!ret.$set) {\n        ret[op] = update[op];\n      }\n    } else {\n      ret[op] = update[op];\n    }\n  }\n\n  this._compiledUpdate = ret;\n  return ret;\n}\n\n/**\n * Make sure _path is set.\n *\n * @parmam {String} method\n */\n\nQuery.prototype._ensurePath = function (method) {\n  if (!this._path) {\n    var msg = method + '() must be used after where() '\n                     + 'when called with these arguments'\n    throw new Error(msg);\n  }\n}\n\n/*!\n * Permissions\n */\n\nQuery.permissions = require('./permissions');\n\nQuery._isPermitted = function (a, b) {\n  var denied = Query.permissions[b];\n  if (!denied) return true;\n  return true !== denied[a];\n}\n\nQuery.prototype._validate = function (action) {\n  var fail;\n  var validator;\n\n  if (undefined === action) {\n\n    validator = Query.permissions[this.op];\n    if ('function' != typeof validator) return true;\n\n    fail = validator(this);\n\n  } else if (!Query._isPermitted(action, this.op)) {\n    fail = action;\n  }\n\n  if (fail) {\n    throw new Error(fail + ' cannot be used with ' + this.op);\n  }\n}\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n *\n * @param {Object} conds\n * @return {Boolean}\n */\n\nQuery.canMerge = function (conds) {\n  return conds instanceof Query || utils.isObject(conds);\n}\n\n/**\n * Set a trace function that will get called whenever a\n * query is executed.\n *\n * See `setTraceFunction()` for details.\n *\n * @param {Object} conds\n * @return {Boolean}\n */\nQuery.setGlobalTraceFunction = function (traceFunction) {\n  Query.traceFunction = traceFunction;\n}\n\n/*!\n * Exports.\n */\n\nQuery.utils = utils;\nQuery.env = require('./env')\nQuery.Collection = require('./collection');\nQuery.BaseCollection = require('./collection/collection');\nQuery.Promise = require('bluebird');\nmodule.exports = exports = Query;\n\n// TODO\n// test utils\n","map":{"mappings":[{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1876,"column":0},"generated":{"line":1876,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1877,"column":0},"generated":{"line":1877,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1878,"column":0},"generated":{"line":1878,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1879,"column":0},"generated":{"line":1879,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1880,"column":0},"generated":{"line":1880,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1881,"column":0},"generated":{"line":1881,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1882,"column":0},"generated":{"line":1882,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1883,"column":0},"generated":{"line":1883,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1884,"column":0},"generated":{"line":1884,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1885,"column":0},"generated":{"line":1885,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1886,"column":0},"generated":{"line":1886,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1887,"column":0},"generated":{"line":1887,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1888,"column":0},"generated":{"line":1888,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1889,"column":0},"generated":{"line":1889,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1890,"column":0},"generated":{"line":1890,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1891,"column":0},"generated":{"line":1891,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1892,"column":0},"generated":{"line":1892,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1893,"column":0},"generated":{"line":1893,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1894,"column":0},"generated":{"line":1894,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1895,"column":0},"generated":{"line":1895,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1896,"column":0},"generated":{"line":1896,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1897,"column":0},"generated":{"line":1897,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1898,"column":0},"generated":{"line":1898,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1899,"column":0},"generated":{"line":1899,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1900,"column":0},"generated":{"line":1900,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1901,"column":0},"generated":{"line":1901,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1902,"column":0},"generated":{"line":1902,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1903,"column":0},"generated":{"line":1903,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1904,"column":0},"generated":{"line":1904,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1905,"column":0},"generated":{"line":1905,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1906,"column":0},"generated":{"line":1906,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1907,"column":0},"generated":{"line":1907,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1908,"column":0},"generated":{"line":1908,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1909,"column":0},"generated":{"line":1909,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1910,"column":0},"generated":{"line":1910,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1911,"column":0},"generated":{"line":1911,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1912,"column":0},"generated":{"line":1912,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1913,"column":0},"generated":{"line":1913,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1914,"column":0},"generated":{"line":1914,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1915,"column":0},"generated":{"line":1915,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1916,"column":0},"generated":{"line":1916,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1917,"column":0},"generated":{"line":1917,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1918,"column":0},"generated":{"line":1918,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1919,"column":0},"generated":{"line":1919,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1920,"column":0},"generated":{"line":1920,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1921,"column":0},"generated":{"line":1921,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1922,"column":0},"generated":{"line":1922,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1923,"column":0},"generated":{"line":1923,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1924,"column":0},"generated":{"line":1924,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1925,"column":0},"generated":{"line":1925,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1926,"column":0},"generated":{"line":1926,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1927,"column":0},"generated":{"line":1927,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1928,"column":0},"generated":{"line":1928,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1929,"column":0},"generated":{"line":1929,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1930,"column":0},"generated":{"line":1930,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1931,"column":0},"generated":{"line":1931,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1932,"column":0},"generated":{"line":1932,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1933,"column":0},"generated":{"line":1933,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1934,"column":0},"generated":{"line":1934,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1935,"column":0},"generated":{"line":1935,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1936,"column":0},"generated":{"line":1936,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1937,"column":0},"generated":{"line":1937,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1938,"column":0},"generated":{"line":1938,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1939,"column":0},"generated":{"line":1939,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1940,"column":0},"generated":{"line":1940,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1941,"column":0},"generated":{"line":1941,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1942,"column":0},"generated":{"line":1942,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1943,"column":0},"generated":{"line":1943,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1944,"column":0},"generated":{"line":1944,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1945,"column":0},"generated":{"line":1945,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1946,"column":0},"generated":{"line":1946,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1947,"column":0},"generated":{"line":1947,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1948,"column":0},"generated":{"line":1948,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1949,"column":0},"generated":{"line":1949,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1950,"column":0},"generated":{"line":1950,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1951,"column":0},"generated":{"line":1951,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1952,"column":0},"generated":{"line":1952,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1953,"column":0},"generated":{"line":1953,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1954,"column":0},"generated":{"line":1954,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1955,"column":0},"generated":{"line":1955,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1956,"column":0},"generated":{"line":1956,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1957,"column":0},"generated":{"line":1957,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1958,"column":0},"generated":{"line":1958,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1959,"column":0},"generated":{"line":1959,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1960,"column":0},"generated":{"line":1960,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1961,"column":0},"generated":{"line":1961,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1962,"column":0},"generated":{"line":1962,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1963,"column":0},"generated":{"line":1963,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1964,"column":0},"generated":{"line":1964,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1965,"column":0},"generated":{"line":1965,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1966,"column":0},"generated":{"line":1966,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1967,"column":0},"generated":{"line":1967,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1968,"column":0},"generated":{"line":1968,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1969,"column":0},"generated":{"line":1969,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1970,"column":0},"generated":{"line":1970,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1971,"column":0},"generated":{"line":1971,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1972,"column":0},"generated":{"line":1972,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1973,"column":0},"generated":{"line":1973,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1974,"column":0},"generated":{"line":1974,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1975,"column":0},"generated":{"line":1975,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1976,"column":0},"generated":{"line":1976,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1977,"column":0},"generated":{"line":1977,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1978,"column":0},"generated":{"line":1978,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1979,"column":0},"generated":{"line":1979,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1980,"column":0},"generated":{"line":1980,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1981,"column":0},"generated":{"line":1981,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1982,"column":0},"generated":{"line":1982,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1983,"column":0},"generated":{"line":1983,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1984,"column":0},"generated":{"line":1984,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1985,"column":0},"generated":{"line":1985,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1986,"column":0},"generated":{"line":1986,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1987,"column":0},"generated":{"line":1987,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1988,"column":0},"generated":{"line":1988,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1989,"column":0},"generated":{"line":1989,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1990,"column":0},"generated":{"line":1990,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1991,"column":0},"generated":{"line":1991,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1992,"column":0},"generated":{"line":1992,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1993,"column":0},"generated":{"line":1993,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1994,"column":0},"generated":{"line":1994,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1995,"column":0},"generated":{"line":1995,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1996,"column":0},"generated":{"line":1996,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1997,"column":0},"generated":{"line":1997,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1998,"column":0},"generated":{"line":1998,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":1999,"column":0},"generated":{"line":1999,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2000,"column":0},"generated":{"line":2000,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2001,"column":0},"generated":{"line":2001,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2002,"column":0},"generated":{"line":2002,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2003,"column":0},"generated":{"line":2003,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2004,"column":0},"generated":{"line":2004,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2005,"column":0},"generated":{"line":2005,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2006,"column":0},"generated":{"line":2006,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2007,"column":0},"generated":{"line":2007,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2008,"column":0},"generated":{"line":2008,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2009,"column":0},"generated":{"line":2009,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2010,"column":0},"generated":{"line":2010,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2011,"column":0},"generated":{"line":2011,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2012,"column":0},"generated":{"line":2012,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2013,"column":0},"generated":{"line":2013,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2014,"column":0},"generated":{"line":2014,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2015,"column":0},"generated":{"line":2015,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2016,"column":0},"generated":{"line":2016,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2017,"column":0},"generated":{"line":2017,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2018,"column":0},"generated":{"line":2018,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2019,"column":0},"generated":{"line":2019,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2020,"column":0},"generated":{"line":2020,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2021,"column":0},"generated":{"line":2021,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2022,"column":0},"generated":{"line":2022,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2023,"column":0},"generated":{"line":2023,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2024,"column":0},"generated":{"line":2024,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2025,"column":0},"generated":{"line":2025,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2026,"column":0},"generated":{"line":2026,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2027,"column":0},"generated":{"line":2027,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2028,"column":0},"generated":{"line":2028,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2029,"column":0},"generated":{"line":2029,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2030,"column":0},"generated":{"line":2030,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2031,"column":0},"generated":{"line":2031,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2032,"column":0},"generated":{"line":2032,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2033,"column":0},"generated":{"line":2033,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2034,"column":0},"generated":{"line":2034,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2035,"column":0},"generated":{"line":2035,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2036,"column":0},"generated":{"line":2036,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2037,"column":0},"generated":{"line":2037,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2038,"column":0},"generated":{"line":2038,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2039,"column":0},"generated":{"line":2039,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2040,"column":0},"generated":{"line":2040,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2041,"column":0},"generated":{"line":2041,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2042,"column":0},"generated":{"line":2042,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2043,"column":0},"generated":{"line":2043,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2044,"column":0},"generated":{"line":2044,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2045,"column":0},"generated":{"line":2045,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2046,"column":0},"generated":{"line":2046,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2047,"column":0},"generated":{"line":2047,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2048,"column":0},"generated":{"line":2048,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2049,"column":0},"generated":{"line":2049,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2050,"column":0},"generated":{"line":2050,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2051,"column":0},"generated":{"line":2051,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2052,"column":0},"generated":{"line":2052,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2053,"column":0},"generated":{"line":2053,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2054,"column":0},"generated":{"line":2054,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2055,"column":0},"generated":{"line":2055,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2056,"column":0},"generated":{"line":2056,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2057,"column":0},"generated":{"line":2057,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2058,"column":0},"generated":{"line":2058,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2059,"column":0},"generated":{"line":2059,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2060,"column":0},"generated":{"line":2060,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2061,"column":0},"generated":{"line":2061,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2062,"column":0},"generated":{"line":2062,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2063,"column":0},"generated":{"line":2063,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2064,"column":0},"generated":{"line":2064,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2065,"column":0},"generated":{"line":2065,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2066,"column":0},"generated":{"line":2066,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2067,"column":0},"generated":{"line":2067,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2068,"column":0},"generated":{"line":2068,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2069,"column":0},"generated":{"line":2069,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2070,"column":0},"generated":{"line":2070,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2071,"column":0},"generated":{"line":2071,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2072,"column":0},"generated":{"line":2072,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2073,"column":0},"generated":{"line":2073,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2074,"column":0},"generated":{"line":2074,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2075,"column":0},"generated":{"line":2075,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2076,"column":0},"generated":{"line":2076,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2077,"column":0},"generated":{"line":2077,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2078,"column":0},"generated":{"line":2078,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2079,"column":0},"generated":{"line":2079,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2080,"column":0},"generated":{"line":2080,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2081,"column":0},"generated":{"line":2081,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2082,"column":0},"generated":{"line":2082,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2083,"column":0},"generated":{"line":2083,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2084,"column":0},"generated":{"line":2084,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2085,"column":0},"generated":{"line":2085,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2086,"column":0},"generated":{"line":2086,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2087,"column":0},"generated":{"line":2087,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2088,"column":0},"generated":{"line":2088,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2089,"column":0},"generated":{"line":2089,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2090,"column":0},"generated":{"line":2090,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2091,"column":0},"generated":{"line":2091,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2092,"column":0},"generated":{"line":2092,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2093,"column":0},"generated":{"line":2093,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2094,"column":0},"generated":{"line":2094,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2095,"column":0},"generated":{"line":2095,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2096,"column":0},"generated":{"line":2096,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2097,"column":0},"generated":{"line":2097,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2098,"column":0},"generated":{"line":2098,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2099,"column":0},"generated":{"line":2099,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2100,"column":0},"generated":{"line":2100,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2101,"column":0},"generated":{"line":2101,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2102,"column":0},"generated":{"line":2102,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2103,"column":0},"generated":{"line":2103,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2104,"column":0},"generated":{"line":2104,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2105,"column":0},"generated":{"line":2105,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2106,"column":0},"generated":{"line":2106,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2107,"column":0},"generated":{"line":2107,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2108,"column":0},"generated":{"line":2108,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2109,"column":0},"generated":{"line":2109,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2110,"column":0},"generated":{"line":2110,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2111,"column":0},"generated":{"line":2111,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2112,"column":0},"generated":{"line":2112,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2113,"column":0},"generated":{"line":2113,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2114,"column":0},"generated":{"line":2114,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2115,"column":0},"generated":{"line":2115,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2116,"column":0},"generated":{"line":2116,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2117,"column":0},"generated":{"line":2117,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2118,"column":0},"generated":{"line":2118,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2119,"column":0},"generated":{"line":2119,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2120,"column":0},"generated":{"line":2120,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2121,"column":0},"generated":{"line":2121,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2122,"column":0},"generated":{"line":2122,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2123,"column":0},"generated":{"line":2123,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2124,"column":0},"generated":{"line":2124,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2125,"column":0},"generated":{"line":2125,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2126,"column":0},"generated":{"line":2126,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2127,"column":0},"generated":{"line":2127,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2128,"column":0},"generated":{"line":2128,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2129,"column":0},"generated":{"line":2129,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2130,"column":0},"generated":{"line":2130,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2131,"column":0},"generated":{"line":2131,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2132,"column":0},"generated":{"line":2132,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2133,"column":0},"generated":{"line":2133,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2134,"column":0},"generated":{"line":2134,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2135,"column":0},"generated":{"line":2135,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2136,"column":0},"generated":{"line":2136,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2137,"column":0},"generated":{"line":2137,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2138,"column":0},"generated":{"line":2138,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2139,"column":0},"generated":{"line":2139,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2140,"column":0},"generated":{"line":2140,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2141,"column":0},"generated":{"line":2141,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2142,"column":0},"generated":{"line":2142,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2143,"column":0},"generated":{"line":2143,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2144,"column":0},"generated":{"line":2144,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2145,"column":0},"generated":{"line":2145,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2146,"column":0},"generated":{"line":2146,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2147,"column":0},"generated":{"line":2147,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2148,"column":0},"generated":{"line":2148,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2149,"column":0},"generated":{"line":2149,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2150,"column":0},"generated":{"line":2150,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2151,"column":0},"generated":{"line":2151,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2152,"column":0},"generated":{"line":2152,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2153,"column":0},"generated":{"line":2153,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2154,"column":0},"generated":{"line":2154,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2155,"column":0},"generated":{"line":2155,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2156,"column":0},"generated":{"line":2156,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2157,"column":0},"generated":{"line":2157,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2158,"column":0},"generated":{"line":2158,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2159,"column":0},"generated":{"line":2159,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2160,"column":0},"generated":{"line":2160,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2161,"column":0},"generated":{"line":2161,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2162,"column":0},"generated":{"line":2162,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2163,"column":0},"generated":{"line":2163,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2164,"column":0},"generated":{"line":2164,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2165,"column":0},"generated":{"line":2165,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2166,"column":0},"generated":{"line":2166,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2167,"column":0},"generated":{"line":2167,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2168,"column":0},"generated":{"line":2168,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2169,"column":0},"generated":{"line":2169,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2170,"column":0},"generated":{"line":2170,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2171,"column":0},"generated":{"line":2171,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2172,"column":0},"generated":{"line":2172,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2173,"column":0},"generated":{"line":2173,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2174,"column":0},"generated":{"line":2174,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2175,"column":0},"generated":{"line":2175,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2176,"column":0},"generated":{"line":2176,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2177,"column":0},"generated":{"line":2177,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2178,"column":0},"generated":{"line":2178,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2179,"column":0},"generated":{"line":2179,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2180,"column":0},"generated":{"line":2180,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2181,"column":0},"generated":{"line":2181,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2182,"column":0},"generated":{"line":2182,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2183,"column":0},"generated":{"line":2183,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2184,"column":0},"generated":{"line":2184,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2185,"column":0},"generated":{"line":2185,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2186,"column":0},"generated":{"line":2186,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2187,"column":0},"generated":{"line":2187,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2188,"column":0},"generated":{"line":2188,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2189,"column":0},"generated":{"line":2189,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2190,"column":0},"generated":{"line":2190,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2191,"column":0},"generated":{"line":2191,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2192,"column":0},"generated":{"line":2192,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2193,"column":0},"generated":{"line":2193,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2194,"column":0},"generated":{"line":2194,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2195,"column":0},"generated":{"line":2195,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2196,"column":0},"generated":{"line":2196,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2197,"column":0},"generated":{"line":2197,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2198,"column":0},"generated":{"line":2198,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2199,"column":0},"generated":{"line":2199,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2200,"column":0},"generated":{"line":2200,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2201,"column":0},"generated":{"line":2201,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2202,"column":0},"generated":{"line":2202,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2203,"column":0},"generated":{"line":2203,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2204,"column":0},"generated":{"line":2204,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2205,"column":0},"generated":{"line":2205,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2206,"column":0},"generated":{"line":2206,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2207,"column":0},"generated":{"line":2207,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2208,"column":0},"generated":{"line":2208,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2209,"column":0},"generated":{"line":2209,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2210,"column":0},"generated":{"line":2210,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2211,"column":0},"generated":{"line":2211,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2212,"column":0},"generated":{"line":2212,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2213,"column":0},"generated":{"line":2213,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2214,"column":0},"generated":{"line":2214,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2215,"column":0},"generated":{"line":2215,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2216,"column":0},"generated":{"line":2216,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2217,"column":0},"generated":{"line":2217,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2218,"column":0},"generated":{"line":2218,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2219,"column":0},"generated":{"line":2219,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2220,"column":0},"generated":{"line":2220,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2221,"column":0},"generated":{"line":2221,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2222,"column":0},"generated":{"line":2222,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2223,"column":0},"generated":{"line":2223,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2224,"column":0},"generated":{"line":2224,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2225,"column":0},"generated":{"line":2225,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2226,"column":0},"generated":{"line":2226,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2227,"column":0},"generated":{"line":2227,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2228,"column":0},"generated":{"line":2228,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2229,"column":0},"generated":{"line":2229,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2230,"column":0},"generated":{"line":2230,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2231,"column":0},"generated":{"line":2231,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2232,"column":0},"generated":{"line":2232,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2233,"column":0},"generated":{"line":2233,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2234,"column":0},"generated":{"line":2234,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2235,"column":0},"generated":{"line":2235,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2236,"column":0},"generated":{"line":2236,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2237,"column":0},"generated":{"line":2237,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2238,"column":0},"generated":{"line":2238,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2239,"column":0},"generated":{"line":2239,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2240,"column":0},"generated":{"line":2240,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2241,"column":0},"generated":{"line":2241,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2242,"column":0},"generated":{"line":2242,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2243,"column":0},"generated":{"line":2243,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2244,"column":0},"generated":{"line":2244,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2245,"column":0},"generated":{"line":2245,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2246,"column":0},"generated":{"line":2246,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2247,"column":0},"generated":{"line":2247,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2248,"column":0},"generated":{"line":2248,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2249,"column":0},"generated":{"line":2249,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2250,"column":0},"generated":{"line":2250,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2251,"column":0},"generated":{"line":2251,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2252,"column":0},"generated":{"line":2252,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2253,"column":0},"generated":{"line":2253,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2254,"column":0},"generated":{"line":2254,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2255,"column":0},"generated":{"line":2255,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2256,"column":0},"generated":{"line":2256,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2257,"column":0},"generated":{"line":2257,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2258,"column":0},"generated":{"line":2258,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2259,"column":0},"generated":{"line":2259,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2260,"column":0},"generated":{"line":2260,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2261,"column":0},"generated":{"line":2261,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2262,"column":0},"generated":{"line":2262,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2263,"column":0},"generated":{"line":2263,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2264,"column":0},"generated":{"line":2264,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2265,"column":0},"generated":{"line":2265,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2266,"column":0},"generated":{"line":2266,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2267,"column":0},"generated":{"line":2267,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2268,"column":0},"generated":{"line":2268,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2269,"column":0},"generated":{"line":2269,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2270,"column":0},"generated":{"line":2270,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2271,"column":0},"generated":{"line":2271,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2272,"column":0},"generated":{"line":2272,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2273,"column":0},"generated":{"line":2273,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2274,"column":0},"generated":{"line":2274,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2275,"column":0},"generated":{"line":2275,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2276,"column":0},"generated":{"line":2276,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2277,"column":0},"generated":{"line":2277,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2278,"column":0},"generated":{"line":2278,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2279,"column":0},"generated":{"line":2279,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2280,"column":0},"generated":{"line":2280,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2281,"column":0},"generated":{"line":2281,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2282,"column":0},"generated":{"line":2282,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2283,"column":0},"generated":{"line":2283,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2284,"column":0},"generated":{"line":2284,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2285,"column":0},"generated":{"line":2285,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2286,"column":0},"generated":{"line":2286,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2287,"column":0},"generated":{"line":2287,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2288,"column":0},"generated":{"line":2288,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2289,"column":0},"generated":{"line":2289,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2290,"column":0},"generated":{"line":2290,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2291,"column":0},"generated":{"line":2291,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2292,"column":0},"generated":{"line":2292,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2293,"column":0},"generated":{"line":2293,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2294,"column":0},"generated":{"line":2294,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2295,"column":0},"generated":{"line":2295,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2296,"column":0},"generated":{"line":2296,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2297,"column":0},"generated":{"line":2297,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2298,"column":0},"generated":{"line":2298,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2299,"column":0},"generated":{"line":2299,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2300,"column":0},"generated":{"line":2300,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2301,"column":0},"generated":{"line":2301,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2302,"column":0},"generated":{"line":2302,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2303,"column":0},"generated":{"line":2303,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2304,"column":0},"generated":{"line":2304,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2305,"column":0},"generated":{"line":2305,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2306,"column":0},"generated":{"line":2306,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2307,"column":0},"generated":{"line":2307,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2308,"column":0},"generated":{"line":2308,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2309,"column":0},"generated":{"line":2309,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2310,"column":0},"generated":{"line":2310,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2311,"column":0},"generated":{"line":2311,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2312,"column":0},"generated":{"line":2312,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2313,"column":0},"generated":{"line":2313,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2314,"column":0},"generated":{"line":2314,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2315,"column":0},"generated":{"line":2315,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2316,"column":0},"generated":{"line":2316,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2317,"column":0},"generated":{"line":2317,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2318,"column":0},"generated":{"line":2318,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2319,"column":0},"generated":{"line":2319,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2320,"column":0},"generated":{"line":2320,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2321,"column":0},"generated":{"line":2321,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2322,"column":0},"generated":{"line":2322,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2323,"column":0},"generated":{"line":2323,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2324,"column":0},"generated":{"line":2324,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2325,"column":0},"generated":{"line":2325,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2326,"column":0},"generated":{"line":2326,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2327,"column":0},"generated":{"line":2327,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2328,"column":0},"generated":{"line":2328,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2329,"column":0},"generated":{"line":2329,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2330,"column":0},"generated":{"line":2330,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2331,"column":0},"generated":{"line":2331,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2332,"column":0},"generated":{"line":2332,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2333,"column":0},"generated":{"line":2333,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2334,"column":0},"generated":{"line":2334,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2335,"column":0},"generated":{"line":2335,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2336,"column":0},"generated":{"line":2336,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2337,"column":0},"generated":{"line":2337,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2338,"column":0},"generated":{"line":2338,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2339,"column":0},"generated":{"line":2339,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2340,"column":0},"generated":{"line":2340,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2341,"column":0},"generated":{"line":2341,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2342,"column":0},"generated":{"line":2342,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2343,"column":0},"generated":{"line":2343,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2344,"column":0},"generated":{"line":2344,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2345,"column":0},"generated":{"line":2345,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2346,"column":0},"generated":{"line":2346,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2347,"column":0},"generated":{"line":2347,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2348,"column":0},"generated":{"line":2348,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2349,"column":0},"generated":{"line":2349,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2350,"column":0},"generated":{"line":2350,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2351,"column":0},"generated":{"line":2351,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2352,"column":0},"generated":{"line":2352,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2353,"column":0},"generated":{"line":2353,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2354,"column":0},"generated":{"line":2354,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2355,"column":0},"generated":{"line":2355,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2356,"column":0},"generated":{"line":2356,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2357,"column":0},"generated":{"line":2357,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2358,"column":0},"generated":{"line":2358,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2359,"column":0},"generated":{"line":2359,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2360,"column":0},"generated":{"line":2360,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2361,"column":0},"generated":{"line":2361,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2362,"column":0},"generated":{"line":2362,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2363,"column":0},"generated":{"line":2363,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2364,"column":0},"generated":{"line":2364,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2365,"column":0},"generated":{"line":2365,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2366,"column":0},"generated":{"line":2366,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2367,"column":0},"generated":{"line":2367,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2368,"column":0},"generated":{"line":2368,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2369,"column":0},"generated":{"line":2369,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2370,"column":0},"generated":{"line":2370,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2371,"column":0},"generated":{"line":2371,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2372,"column":0},"generated":{"line":2372,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2373,"column":0},"generated":{"line":2373,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2374,"column":0},"generated":{"line":2374,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2375,"column":0},"generated":{"line":2375,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2376,"column":0},"generated":{"line":2376,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2377,"column":0},"generated":{"line":2377,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2378,"column":0},"generated":{"line":2378,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2379,"column":0},"generated":{"line":2379,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2380,"column":0},"generated":{"line":2380,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2381,"column":0},"generated":{"line":2381,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2382,"column":0},"generated":{"line":2382,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2383,"column":0},"generated":{"line":2383,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2384,"column":0},"generated":{"line":2384,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2385,"column":0},"generated":{"line":2385,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2386,"column":0},"generated":{"line":2386,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2387,"column":0},"generated":{"line":2387,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2388,"column":0},"generated":{"line":2388,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2389,"column":0},"generated":{"line":2389,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2390,"column":0},"generated":{"line":2390,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2391,"column":0},"generated":{"line":2391,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2392,"column":0},"generated":{"line":2392,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2393,"column":0},"generated":{"line":2393,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2394,"column":0},"generated":{"line":2394,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2395,"column":0},"generated":{"line":2395,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2396,"column":0},"generated":{"line":2396,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2397,"column":0},"generated":{"line":2397,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2398,"column":0},"generated":{"line":2398,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2399,"column":0},"generated":{"line":2399,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2400,"column":0},"generated":{"line":2400,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2401,"column":0},"generated":{"line":2401,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2402,"column":0},"generated":{"line":2402,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2403,"column":0},"generated":{"line":2403,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2404,"column":0},"generated":{"line":2404,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2405,"column":0},"generated":{"line":2405,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2406,"column":0},"generated":{"line":2406,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2407,"column":0},"generated":{"line":2407,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2408,"column":0},"generated":{"line":2408,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2409,"column":0},"generated":{"line":2409,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2410,"column":0},"generated":{"line":2410,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2411,"column":0},"generated":{"line":2411,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2412,"column":0},"generated":{"line":2412,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2413,"column":0},"generated":{"line":2413,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2414,"column":0},"generated":{"line":2414,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2415,"column":0},"generated":{"line":2415,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2416,"column":0},"generated":{"line":2416,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2417,"column":0},"generated":{"line":2417,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2418,"column":0},"generated":{"line":2418,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2419,"column":0},"generated":{"line":2419,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2420,"column":0},"generated":{"line":2420,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2421,"column":0},"generated":{"line":2421,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2422,"column":0},"generated":{"line":2422,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2423,"column":0},"generated":{"line":2423,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2424,"column":0},"generated":{"line":2424,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2425,"column":0},"generated":{"line":2425,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2426,"column":0},"generated":{"line":2426,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2427,"column":0},"generated":{"line":2427,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2428,"column":0},"generated":{"line":2428,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2429,"column":0},"generated":{"line":2429,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2430,"column":0},"generated":{"line":2430,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2431,"column":0},"generated":{"line":2431,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2432,"column":0},"generated":{"line":2432,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2433,"column":0},"generated":{"line":2433,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2434,"column":0},"generated":{"line":2434,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2435,"column":0},"generated":{"line":2435,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2436,"column":0},"generated":{"line":2436,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2437,"column":0},"generated":{"line":2437,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2438,"column":0},"generated":{"line":2438,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2439,"column":0},"generated":{"line":2439,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2440,"column":0},"generated":{"line":2440,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2441,"column":0},"generated":{"line":2441,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2442,"column":0},"generated":{"line":2442,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2443,"column":0},"generated":{"line":2443,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2444,"column":0},"generated":{"line":2444,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2445,"column":0},"generated":{"line":2445,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2446,"column":0},"generated":{"line":2446,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2447,"column":0},"generated":{"line":2447,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2448,"column":0},"generated":{"line":2448,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2449,"column":0},"generated":{"line":2449,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2450,"column":0},"generated":{"line":2450,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2451,"column":0},"generated":{"line":2451,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2452,"column":0},"generated":{"line":2452,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2453,"column":0},"generated":{"line":2453,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2454,"column":0},"generated":{"line":2454,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2455,"column":0},"generated":{"line":2455,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2456,"column":0},"generated":{"line":2456,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2457,"column":0},"generated":{"line":2457,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2458,"column":0},"generated":{"line":2458,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2459,"column":0},"generated":{"line":2459,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2460,"column":0},"generated":{"line":2460,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2461,"column":0},"generated":{"line":2461,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2462,"column":0},"generated":{"line":2462,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2463,"column":0},"generated":{"line":2463,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2464,"column":0},"generated":{"line":2464,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2465,"column":0},"generated":{"line":2465,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2466,"column":0},"generated":{"line":2466,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2467,"column":0},"generated":{"line":2467,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2468,"column":0},"generated":{"line":2468,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2469,"column":0},"generated":{"line":2469,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2470,"column":0},"generated":{"line":2470,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2471,"column":0},"generated":{"line":2471,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2472,"column":0},"generated":{"line":2472,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2473,"column":0},"generated":{"line":2473,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2474,"column":0},"generated":{"line":2474,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2475,"column":0},"generated":{"line":2475,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2476,"column":0},"generated":{"line":2476,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2477,"column":0},"generated":{"line":2477,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2478,"column":0},"generated":{"line":2478,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2479,"column":0},"generated":{"line":2479,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2480,"column":0},"generated":{"line":2480,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2481,"column":0},"generated":{"line":2481,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2482,"column":0},"generated":{"line":2482,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2483,"column":0},"generated":{"line":2483,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2484,"column":0},"generated":{"line":2484,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2485,"column":0},"generated":{"line":2485,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2486,"column":0},"generated":{"line":2486,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2487,"column":0},"generated":{"line":2487,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2488,"column":0},"generated":{"line":2488,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2489,"column":0},"generated":{"line":2489,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2490,"column":0},"generated":{"line":2490,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2491,"column":0},"generated":{"line":2491,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2492,"column":0},"generated":{"line":2492,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2493,"column":0},"generated":{"line":2493,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2494,"column":0},"generated":{"line":2494,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2495,"column":0},"generated":{"line":2495,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2496,"column":0},"generated":{"line":2496,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2497,"column":0},"generated":{"line":2497,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2498,"column":0},"generated":{"line":2498,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2499,"column":0},"generated":{"line":2499,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2500,"column":0},"generated":{"line":2500,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2501,"column":0},"generated":{"line":2501,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2502,"column":0},"generated":{"line":2502,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2503,"column":0},"generated":{"line":2503,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2504,"column":0},"generated":{"line":2504,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2505,"column":0},"generated":{"line":2505,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2506,"column":0},"generated":{"line":2506,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2507,"column":0},"generated":{"line":2507,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2508,"column":0},"generated":{"line":2508,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2509,"column":0},"generated":{"line":2509,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2510,"column":0},"generated":{"line":2510,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2511,"column":0},"generated":{"line":2511,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2512,"column":0},"generated":{"line":2512,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2513,"column":0},"generated":{"line":2513,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2514,"column":0},"generated":{"line":2514,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2515,"column":0},"generated":{"line":2515,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2516,"column":0},"generated":{"line":2516,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2517,"column":0},"generated":{"line":2517,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2518,"column":0},"generated":{"line":2518,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2519,"column":0},"generated":{"line":2519,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2520,"column":0},"generated":{"line":2520,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2521,"column":0},"generated":{"line":2521,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2522,"column":0},"generated":{"line":2522,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2523,"column":0},"generated":{"line":2523,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2524,"column":0},"generated":{"line":2524,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2525,"column":0},"generated":{"line":2525,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2526,"column":0},"generated":{"line":2526,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2527,"column":0},"generated":{"line":2527,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2528,"column":0},"generated":{"line":2528,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2529,"column":0},"generated":{"line":2529,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2530,"column":0},"generated":{"line":2530,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2531,"column":0},"generated":{"line":2531,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2532,"column":0},"generated":{"line":2532,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2533,"column":0},"generated":{"line":2533,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2534,"column":0},"generated":{"line":2534,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2535,"column":0},"generated":{"line":2535,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2536,"column":0},"generated":{"line":2536,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2537,"column":0},"generated":{"line":2537,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2538,"column":0},"generated":{"line":2538,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2539,"column":0},"generated":{"line":2539,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2540,"column":0},"generated":{"line":2540,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2541,"column":0},"generated":{"line":2541,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2542,"column":0},"generated":{"line":2542,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2543,"column":0},"generated":{"line":2543,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2544,"column":0},"generated":{"line":2544,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2545,"column":0},"generated":{"line":2545,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2546,"column":0},"generated":{"line":2546,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2547,"column":0},"generated":{"line":2547,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2548,"column":0},"generated":{"line":2548,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2549,"column":0},"generated":{"line":2549,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2550,"column":0},"generated":{"line":2550,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2551,"column":0},"generated":{"line":2551,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2552,"column":0},"generated":{"line":2552,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2553,"column":0},"generated":{"line":2553,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2554,"column":0},"generated":{"line":2554,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2555,"column":0},"generated":{"line":2555,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2556,"column":0},"generated":{"line":2556,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2557,"column":0},"generated":{"line":2557,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2558,"column":0},"generated":{"line":2558,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2559,"column":0},"generated":{"line":2559,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2560,"column":0},"generated":{"line":2560,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2561,"column":0},"generated":{"line":2561,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2562,"column":0},"generated":{"line":2562,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2563,"column":0},"generated":{"line":2563,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2564,"column":0},"generated":{"line":2564,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2565,"column":0},"generated":{"line":2565,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2566,"column":0},"generated":{"line":2566,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2567,"column":0},"generated":{"line":2567,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2568,"column":0},"generated":{"line":2568,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2569,"column":0},"generated":{"line":2569,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2570,"column":0},"generated":{"line":2570,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2571,"column":0},"generated":{"line":2571,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2572,"column":0},"generated":{"line":2572,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2573,"column":0},"generated":{"line":2573,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2574,"column":0},"generated":{"line":2574,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2575,"column":0},"generated":{"line":2575,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2576,"column":0},"generated":{"line":2576,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2577,"column":0},"generated":{"line":2577,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2578,"column":0},"generated":{"line":2578,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2579,"column":0},"generated":{"line":2579,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2580,"column":0},"generated":{"line":2580,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2581,"column":0},"generated":{"line":2581,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2582,"column":0},"generated":{"line":2582,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2583,"column":0},"generated":{"line":2583,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2584,"column":0},"generated":{"line":2584,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2585,"column":0},"generated":{"line":2585,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2586,"column":0},"generated":{"line":2586,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2587,"column":0},"generated":{"line":2587,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2588,"column":0},"generated":{"line":2588,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2589,"column":0},"generated":{"line":2589,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2590,"column":0},"generated":{"line":2590,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2591,"column":0},"generated":{"line":2591,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2592,"column":0},"generated":{"line":2592,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2593,"column":0},"generated":{"line":2593,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2594,"column":0},"generated":{"line":2594,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2595,"column":0},"generated":{"line":2595,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2596,"column":0},"generated":{"line":2596,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2597,"column":0},"generated":{"line":2597,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2598,"column":0},"generated":{"line":2598,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2599,"column":0},"generated":{"line":2599,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2600,"column":0},"generated":{"line":2600,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2601,"column":0},"generated":{"line":2601,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2602,"column":0},"generated":{"line":2602,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2603,"column":0},"generated":{"line":2603,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2604,"column":0},"generated":{"line":2604,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2605,"column":0},"generated":{"line":2605,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2606,"column":0},"generated":{"line":2606,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2607,"column":0},"generated":{"line":2607,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2608,"column":0},"generated":{"line":2608,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2609,"column":0},"generated":{"line":2609,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2610,"column":0},"generated":{"line":2610,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2611,"column":0},"generated":{"line":2611,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2612,"column":0},"generated":{"line":2612,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2613,"column":0},"generated":{"line":2613,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2614,"column":0},"generated":{"line":2614,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2615,"column":0},"generated":{"line":2615,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2616,"column":0},"generated":{"line":2616,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2617,"column":0},"generated":{"line":2617,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2618,"column":0},"generated":{"line":2618,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2619,"column":0},"generated":{"line":2619,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2620,"column":0},"generated":{"line":2620,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2621,"column":0},"generated":{"line":2621,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2622,"column":0},"generated":{"line":2622,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2623,"column":0},"generated":{"line":2623,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2624,"column":0},"generated":{"line":2624,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2625,"column":0},"generated":{"line":2625,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2626,"column":0},"generated":{"line":2626,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2627,"column":0},"generated":{"line":2627,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2628,"column":0},"generated":{"line":2628,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2629,"column":0},"generated":{"line":2629,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2630,"column":0},"generated":{"line":2630,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2631,"column":0},"generated":{"line":2631,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2632,"column":0},"generated":{"line":2632,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2633,"column":0},"generated":{"line":2633,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2634,"column":0},"generated":{"line":2634,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2635,"column":0},"generated":{"line":2635,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2636,"column":0},"generated":{"line":2636,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2637,"column":0},"generated":{"line":2637,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2638,"column":0},"generated":{"line":2638,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2639,"column":0},"generated":{"line":2639,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2640,"column":0},"generated":{"line":2640,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2641,"column":0},"generated":{"line":2641,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2642,"column":0},"generated":{"line":2642,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2643,"column":0},"generated":{"line":2643,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2644,"column":0},"generated":{"line":2644,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2645,"column":0},"generated":{"line":2645,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2646,"column":0},"generated":{"line":2646,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2647,"column":0},"generated":{"line":2647,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2648,"column":0},"generated":{"line":2648,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2649,"column":0},"generated":{"line":2649,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2650,"column":0},"generated":{"line":2650,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2651,"column":0},"generated":{"line":2651,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2652,"column":0},"generated":{"line":2652,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2653,"column":0},"generated":{"line":2653,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2654,"column":0},"generated":{"line":2654,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2655,"column":0},"generated":{"line":2655,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2656,"column":0},"generated":{"line":2656,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2657,"column":0},"generated":{"line":2657,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2658,"column":0},"generated":{"line":2658,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2659,"column":0},"generated":{"line":2659,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2660,"column":0},"generated":{"line":2660,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2661,"column":0},"generated":{"line":2661,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2662,"column":0},"generated":{"line":2662,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2663,"column":0},"generated":{"line":2663,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2664,"column":0},"generated":{"line":2664,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2665,"column":0},"generated":{"line":2665,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2666,"column":0},"generated":{"line":2666,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2667,"column":0},"generated":{"line":2667,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2668,"column":0},"generated":{"line":2668,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2669,"column":0},"generated":{"line":2669,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2670,"column":0},"generated":{"line":2670,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2671,"column":0},"generated":{"line":2671,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2672,"column":0},"generated":{"line":2672,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2673,"column":0},"generated":{"line":2673,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2674,"column":0},"generated":{"line":2674,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2675,"column":0},"generated":{"line":2675,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2676,"column":0},"generated":{"line":2676,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2677,"column":0},"generated":{"line":2677,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2678,"column":0},"generated":{"line":2678,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2679,"column":0},"generated":{"line":2679,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2680,"column":0},"generated":{"line":2680,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2681,"column":0},"generated":{"line":2681,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2682,"column":0},"generated":{"line":2682,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2683,"column":0},"generated":{"line":2683,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2684,"column":0},"generated":{"line":2684,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2685,"column":0},"generated":{"line":2685,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2686,"column":0},"generated":{"line":2686,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2687,"column":0},"generated":{"line":2687,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2688,"column":0},"generated":{"line":2688,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2689,"column":0},"generated":{"line":2689,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2690,"column":0},"generated":{"line":2690,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2691,"column":0},"generated":{"line":2691,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2692,"column":0},"generated":{"line":2692,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2693,"column":0},"generated":{"line":2693,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2694,"column":0},"generated":{"line":2694,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2695,"column":0},"generated":{"line":2695,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2696,"column":0},"generated":{"line":2696,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2697,"column":0},"generated":{"line":2697,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2698,"column":0},"generated":{"line":2698,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2699,"column":0},"generated":{"line":2699,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2700,"column":0},"generated":{"line":2700,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2701,"column":0},"generated":{"line":2701,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2702,"column":0},"generated":{"line":2702,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2703,"column":0},"generated":{"line":2703,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2704,"column":0},"generated":{"line":2704,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2705,"column":0},"generated":{"line":2705,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2706,"column":0},"generated":{"line":2706,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2707,"column":0},"generated":{"line":2707,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2708,"column":0},"generated":{"line":2708,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2709,"column":0},"generated":{"line":2709,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2710,"column":0},"generated":{"line":2710,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2711,"column":0},"generated":{"line":2711,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2712,"column":0},"generated":{"line":2712,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2713,"column":0},"generated":{"line":2713,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2714,"column":0},"generated":{"line":2714,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2715,"column":0},"generated":{"line":2715,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2716,"column":0},"generated":{"line":2716,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2717,"column":0},"generated":{"line":2717,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2718,"column":0},"generated":{"line":2718,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2719,"column":0},"generated":{"line":2719,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2720,"column":0},"generated":{"line":2720,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2721,"column":0},"generated":{"line":2721,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2722,"column":0},"generated":{"line":2722,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2723,"column":0},"generated":{"line":2723,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2724,"column":0},"generated":{"line":2724,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2725,"column":0},"generated":{"line":2725,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2726,"column":0},"generated":{"line":2726,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2727,"column":0},"generated":{"line":2727,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2728,"column":0},"generated":{"line":2728,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2729,"column":0},"generated":{"line":2729,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2730,"column":0},"generated":{"line":2730,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2731,"column":0},"generated":{"line":2731,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2732,"column":0},"generated":{"line":2732,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2733,"column":0},"generated":{"line":2733,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2734,"column":0},"generated":{"line":2734,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2735,"column":0},"generated":{"line":2735,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2736,"column":0},"generated":{"line":2736,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2737,"column":0},"generated":{"line":2737,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2738,"column":0},"generated":{"line":2738,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2739,"column":0},"generated":{"line":2739,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2740,"column":0},"generated":{"line":2740,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2741,"column":0},"generated":{"line":2741,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2742,"column":0},"generated":{"line":2742,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2743,"column":0},"generated":{"line":2743,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2744,"column":0},"generated":{"line":2744,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2745,"column":0},"generated":{"line":2745,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2746,"column":0},"generated":{"line":2746,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2747,"column":0},"generated":{"line":2747,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2748,"column":0},"generated":{"line":2748,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2749,"column":0},"generated":{"line":2749,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2750,"column":0},"generated":{"line":2750,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2751,"column":0},"generated":{"line":2751,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2752,"column":0},"generated":{"line":2752,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2753,"column":0},"generated":{"line":2753,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2754,"column":0},"generated":{"line":2754,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2755,"column":0},"generated":{"line":2755,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2756,"column":0},"generated":{"line":2756,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2757,"column":0},"generated":{"line":2757,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2758,"column":0},"generated":{"line":2758,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2759,"column":0},"generated":{"line":2759,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2760,"column":0},"generated":{"line":2760,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2761,"column":0},"generated":{"line":2761,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2762,"column":0},"generated":{"line":2762,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2763,"column":0},"generated":{"line":2763,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2764,"column":0},"generated":{"line":2764,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2765,"column":0},"generated":{"line":2765,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2766,"column":0},"generated":{"line":2766,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2767,"column":0},"generated":{"line":2767,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2768,"column":0},"generated":{"line":2768,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2769,"column":0},"generated":{"line":2769,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2770,"column":0},"generated":{"line":2770,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2771,"column":0},"generated":{"line":2771,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2772,"column":0},"generated":{"line":2772,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2773,"column":0},"generated":{"line":2773,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2774,"column":0},"generated":{"line":2774,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2775,"column":0},"generated":{"line":2775,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2776,"column":0},"generated":{"line":2776,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2777,"column":0},"generated":{"line":2777,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2778,"column":0},"generated":{"line":2778,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2779,"column":0},"generated":{"line":2779,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2780,"column":0},"generated":{"line":2780,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2781,"column":0},"generated":{"line":2781,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2782,"column":0},"generated":{"line":2782,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2783,"column":0},"generated":{"line":2783,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2784,"column":0},"generated":{"line":2784,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2785,"column":0},"generated":{"line":2785,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2786,"column":0},"generated":{"line":2786,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2787,"column":0},"generated":{"line":2787,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2788,"column":0},"generated":{"line":2788,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2789,"column":0},"generated":{"line":2789,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2790,"column":0},"generated":{"line":2790,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2791,"column":0},"generated":{"line":2791,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2792,"column":0},"generated":{"line":2792,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2793,"column":0},"generated":{"line":2793,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2794,"column":0},"generated":{"line":2794,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2795,"column":0},"generated":{"line":2795,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2796,"column":0},"generated":{"line":2796,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2797,"column":0},"generated":{"line":2797,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2798,"column":0},"generated":{"line":2798,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2799,"column":0},"generated":{"line":2799,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2800,"column":0},"generated":{"line":2800,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2801,"column":0},"generated":{"line":2801,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2802,"column":0},"generated":{"line":2802,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2803,"column":0},"generated":{"line":2803,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2804,"column":0},"generated":{"line":2804,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2805,"column":0},"generated":{"line":2805,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2806,"column":0},"generated":{"line":2806,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2807,"column":0},"generated":{"line":2807,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2808,"column":0},"generated":{"line":2808,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2809,"column":0},"generated":{"line":2809,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2810,"column":0},"generated":{"line":2810,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2811,"column":0},"generated":{"line":2811,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2812,"column":0},"generated":{"line":2812,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2813,"column":0},"generated":{"line":2813,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2814,"column":0},"generated":{"line":2814,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2815,"column":0},"generated":{"line":2815,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2816,"column":0},"generated":{"line":2816,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2817,"column":0},"generated":{"line":2817,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2818,"column":0},"generated":{"line":2818,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2819,"column":0},"generated":{"line":2819,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2820,"column":0},"generated":{"line":2820,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2821,"column":0},"generated":{"line":2821,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2822,"column":0},"generated":{"line":2822,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2823,"column":0},"generated":{"line":2823,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2824,"column":0},"generated":{"line":2824,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2825,"column":0},"generated":{"line":2825,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2826,"column":0},"generated":{"line":2826,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2827,"column":0},"generated":{"line":2827,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2828,"column":0},"generated":{"line":2828,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2829,"column":0},"generated":{"line":2829,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2830,"column":0},"generated":{"line":2830,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2831,"column":0},"generated":{"line":2831,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2832,"column":0},"generated":{"line":2832,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2833,"column":0},"generated":{"line":2833,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2834,"column":0},"generated":{"line":2834,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2835,"column":0},"generated":{"line":2835,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2836,"column":0},"generated":{"line":2836,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2837,"column":0},"generated":{"line":2837,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2838,"column":0},"generated":{"line":2838,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2839,"column":0},"generated":{"line":2839,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2840,"column":0},"generated":{"line":2840,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2841,"column":0},"generated":{"line":2841,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2842,"column":0},"generated":{"line":2842,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2843,"column":0},"generated":{"line":2843,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2844,"column":0},"generated":{"line":2844,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2845,"column":0},"generated":{"line":2845,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2846,"column":0},"generated":{"line":2846,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2847,"column":0},"generated":{"line":2847,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2848,"column":0},"generated":{"line":2848,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2849,"column":0},"generated":{"line":2849,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2850,"column":0},"generated":{"line":2850,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2851,"column":0},"generated":{"line":2851,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2852,"column":0},"generated":{"line":2852,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2853,"column":0},"generated":{"line":2853,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2854,"column":0},"generated":{"line":2854,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2855,"column":0},"generated":{"line":2855,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2856,"column":0},"generated":{"line":2856,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2857,"column":0},"generated":{"line":2857,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2858,"column":0},"generated":{"line":2858,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2859,"column":0},"generated":{"line":2859,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2860,"column":0},"generated":{"line":2860,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2861,"column":0},"generated":{"line":2861,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2862,"column":0},"generated":{"line":2862,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2863,"column":0},"generated":{"line":2863,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2864,"column":0},"generated":{"line":2864,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2865,"column":0},"generated":{"line":2865,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2866,"column":0},"generated":{"line":2866,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2867,"column":0},"generated":{"line":2867,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2868,"column":0},"generated":{"line":2868,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2869,"column":0},"generated":{"line":2869,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2870,"column":0},"generated":{"line":2870,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2871,"column":0},"generated":{"line":2871,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2872,"column":0},"generated":{"line":2872,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2873,"column":0},"generated":{"line":2873,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2874,"column":0},"generated":{"line":2874,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2875,"column":0},"generated":{"line":2875,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2876,"column":0},"generated":{"line":2876,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2877,"column":0},"generated":{"line":2877,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2878,"column":0},"generated":{"line":2878,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2879,"column":0},"generated":{"line":2879,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2880,"column":0},"generated":{"line":2880,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2881,"column":0},"generated":{"line":2881,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2882,"column":0},"generated":{"line":2882,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2883,"column":0},"generated":{"line":2883,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2884,"column":0},"generated":{"line":2884,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2885,"column":0},"generated":{"line":2885,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2886,"column":0},"generated":{"line":2886,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2887,"column":0},"generated":{"line":2887,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2888,"column":0},"generated":{"line":2888,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2889,"column":0},"generated":{"line":2889,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2890,"column":0},"generated":{"line":2890,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2891,"column":0},"generated":{"line":2891,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2892,"column":0},"generated":{"line":2892,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2893,"column":0},"generated":{"line":2893,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2894,"column":0},"generated":{"line":2894,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2895,"column":0},"generated":{"line":2895,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2896,"column":0},"generated":{"line":2896,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2897,"column":0},"generated":{"line":2897,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2898,"column":0},"generated":{"line":2898,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2899,"column":0},"generated":{"line":2899,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2900,"column":0},"generated":{"line":2900,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2901,"column":0},"generated":{"line":2901,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2902,"column":0},"generated":{"line":2902,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2903,"column":0},"generated":{"line":2903,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2904,"column":0},"generated":{"line":2904,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2905,"column":0},"generated":{"line":2905,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2906,"column":0},"generated":{"line":2906,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2907,"column":0},"generated":{"line":2907,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2908,"column":0},"generated":{"line":2908,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2909,"column":0},"generated":{"line":2909,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2910,"column":0},"generated":{"line":2910,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2911,"column":0},"generated":{"line":2911,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2912,"column":0},"generated":{"line":2912,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2913,"column":0},"generated":{"line":2913,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2914,"column":0},"generated":{"line":2914,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2915,"column":0},"generated":{"line":2915,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2916,"column":0},"generated":{"line":2916,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2917,"column":0},"generated":{"line":2917,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2918,"column":0},"generated":{"line":2918,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2919,"column":0},"generated":{"line":2919,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2920,"column":0},"generated":{"line":2920,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2921,"column":0},"generated":{"line":2921,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2922,"column":0},"generated":{"line":2922,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2923,"column":0},"generated":{"line":2923,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2924,"column":0},"generated":{"line":2924,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2925,"column":0},"generated":{"line":2925,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2926,"column":0},"generated":{"line":2926,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2927,"column":0},"generated":{"line":2927,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2928,"column":0},"generated":{"line":2928,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2929,"column":0},"generated":{"line":2929,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2930,"column":0},"generated":{"line":2930,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2931,"column":0},"generated":{"line":2931,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2932,"column":0},"generated":{"line":2932,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2933,"column":0},"generated":{"line":2933,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2934,"column":0},"generated":{"line":2934,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2935,"column":0},"generated":{"line":2935,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2936,"column":0},"generated":{"line":2936,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2937,"column":0},"generated":{"line":2937,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2938,"column":0},"generated":{"line":2938,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2939,"column":0},"generated":{"line":2939,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2940,"column":0},"generated":{"line":2940,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2941,"column":0},"generated":{"line":2941,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2942,"column":0},"generated":{"line":2942,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2943,"column":0},"generated":{"line":2943,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2944,"column":0},"generated":{"line":2944,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2945,"column":0},"generated":{"line":2945,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2946,"column":0},"generated":{"line":2946,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2947,"column":0},"generated":{"line":2947,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2948,"column":0},"generated":{"line":2948,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2949,"column":0},"generated":{"line":2949,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2950,"column":0},"generated":{"line":2950,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2951,"column":0},"generated":{"line":2951,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2952,"column":0},"generated":{"line":2952,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2953,"column":0},"generated":{"line":2953,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2954,"column":0},"generated":{"line":2954,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2955,"column":0},"generated":{"line":2955,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2956,"column":0},"generated":{"line":2956,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2957,"column":0},"generated":{"line":2957,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2958,"column":0},"generated":{"line":2958,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2959,"column":0},"generated":{"line":2959,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2960,"column":0},"generated":{"line":2960,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2961,"column":0},"generated":{"line":2961,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2962,"column":0},"generated":{"line":2962,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2963,"column":0},"generated":{"line":2963,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2964,"column":0},"generated":{"line":2964,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2965,"column":0},"generated":{"line":2965,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2966,"column":0},"generated":{"line":2966,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2967,"column":0},"generated":{"line":2967,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2968,"column":0},"generated":{"line":2968,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2969,"column":0},"generated":{"line":2969,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2970,"column":0},"generated":{"line":2970,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2971,"column":0},"generated":{"line":2971,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2972,"column":0},"generated":{"line":2972,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2973,"column":0},"generated":{"line":2973,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2974,"column":0},"generated":{"line":2974,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2975,"column":0},"generated":{"line":2975,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2976,"column":0},"generated":{"line":2976,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2977,"column":0},"generated":{"line":2977,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2978,"column":0},"generated":{"line":2978,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2979,"column":0},"generated":{"line":2979,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2980,"column":0},"generated":{"line":2980,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2981,"column":0},"generated":{"line":2981,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2982,"column":0},"generated":{"line":2982,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2983,"column":0},"generated":{"line":2983,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2984,"column":0},"generated":{"line":2984,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2985,"column":0},"generated":{"line":2985,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2986,"column":0},"generated":{"line":2986,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2987,"column":0},"generated":{"line":2987,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2988,"column":0},"generated":{"line":2988,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2989,"column":0},"generated":{"line":2989,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2990,"column":0},"generated":{"line":2990,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2991,"column":0},"generated":{"line":2991,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2992,"column":0},"generated":{"line":2992,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2993,"column":0},"generated":{"line":2993,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2994,"column":0},"generated":{"line":2994,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2995,"column":0},"generated":{"line":2995,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2996,"column":0},"generated":{"line":2996,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2997,"column":0},"generated":{"line":2997,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2998,"column":0},"generated":{"line":2998,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":2999,"column":0},"generated":{"line":2999,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3000,"column":0},"generated":{"line":3000,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3001,"column":0},"generated":{"line":3001,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3002,"column":0},"generated":{"line":3002,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3003,"column":0},"generated":{"line":3003,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3004,"column":0},"generated":{"line":3004,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3005,"column":0},"generated":{"line":3005,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3006,"column":0},"generated":{"line":3006,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3007,"column":0},"generated":{"line":3007,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3008,"column":0},"generated":{"line":3008,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3009,"column":0},"generated":{"line":3009,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3010,"column":0},"generated":{"line":3010,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3011,"column":0},"generated":{"line":3011,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3012,"column":0},"generated":{"line":3012,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3013,"column":0},"generated":{"line":3013,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3014,"column":0},"generated":{"line":3014,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3015,"column":0},"generated":{"line":3015,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3016,"column":0},"generated":{"line":3016,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3017,"column":0},"generated":{"line":3017,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3018,"column":0},"generated":{"line":3018,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3019,"column":0},"generated":{"line":3019,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3020,"column":0},"generated":{"line":3020,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3021,"column":0},"generated":{"line":3021,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3022,"column":0},"generated":{"line":3022,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3023,"column":0},"generated":{"line":3023,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3024,"column":0},"generated":{"line":3024,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3025,"column":0},"generated":{"line":3025,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3026,"column":0},"generated":{"line":3026,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3027,"column":0},"generated":{"line":3027,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3028,"column":0},"generated":{"line":3028,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3029,"column":0},"generated":{"line":3029,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3030,"column":0},"generated":{"line":3030,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3031,"column":0},"generated":{"line":3031,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3032,"column":0},"generated":{"line":3032,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3033,"column":0},"generated":{"line":3033,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3034,"column":0},"generated":{"line":3034,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3035,"column":0},"generated":{"line":3035,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3036,"column":0},"generated":{"line":3036,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3037,"column":0},"generated":{"line":3037,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3038,"column":0},"generated":{"line":3038,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3039,"column":0},"generated":{"line":3039,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3040,"column":0},"generated":{"line":3040,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3041,"column":0},"generated":{"line":3041,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/mquery.js","original":{"line":3042,"column":0},"generated":{"line":3042,"column":0}}],"sources":{"lab-cody/node_modules/mquery/lib/mquery.js":"'use strict';\n\n/**\n * Dependencies\n */\n\nvar slice = require('sliced')\nvar assert = require('assert')\nvar util = require('util')\nvar utils = require('./utils')\nvar debug = require('debug')('mquery');\n\n/**\n * Query constructor used for building queries.\n *\n * ####Example:\n *\n *     var query = new Query({ name: 'mquery' });\n *     query.setOptions({ collection: moduleCollection })\n *     query.where('age').gte(21).exec(callback);\n *\n * @param {Object} [criteria]\n * @param {Object} [options]\n * @api public\n */\n\nfunction Query (criteria, options) {\n  if (!(this instanceof Query))\n    return new Query(criteria, options);\n\n  var proto = this.constructor.prototype;\n\n  this.op = proto.op || undefined;\n\n  this.options = {};\n  this.setOptions(proto.options);\n\n  this._conditions = proto._conditions\n    ? utils.clone(proto._conditions)\n    : {};\n\n  this._fields = proto._fields\n    ? utils.clone(proto._fields)\n    : undefined;\n\n  this._update = proto._update\n    ? utils.clone(proto._update)\n    : undefined;\n\n  this._path = proto._path || undefined;\n  this._distinct = proto._distinct || undefined;\n  this._collection = proto._collection || undefined;\n  this._traceFunction = proto._traceFunction || undefined;\n\n  if (options) {\n    this.setOptions(options);\n  }\n\n  if (criteria) {\n    if (criteria.find && criteria.remove && criteria.update) {\n      // quack quack!\n      this.collection(criteria);\n    } else {\n      this.find(criteria);\n    }\n  }\n}\n\n/**\n * This is a parameter that the user can set which determines if mquery\n * uses $within or $geoWithin for queries. It defaults to true which\n * means $geoWithin will be used. If using MongoDB < 2.4 you should\n * set this to false.\n *\n * @api public\n * @property use$geoWithin\n */\n\nvar $withinCmd = '$geoWithin';\nObject.defineProperty(Query, 'use$geoWithin', {\n    get: function ( ) { return $withinCmd == '$geoWithin' }\n  , set: function (v) {\n      if (true === v) {\n        // mongodb >= 2.4\n        $withinCmd = '$geoWithin';\n      } else {\n        $withinCmd = '$within';\n      }\n    }\n});\n\n/**\n * Converts this query to a constructor function with all arguments and options retained.\n *\n * ####Example\n *\n *     // Create a query that will read documents with a \"video\" category from\n *     // `aCollection` on the primary node in the replica-set unless it is down,\n *     // in which case we'll read from a secondary node.\n *     var query = mquery({ category: 'video' })\n *     query.setOptions({ collection: aCollection, read: 'primaryPreferred' });\n *\n *     // create a constructor based off these settings\n *     var Video = query.toConstructor();\n *\n *     // Video is now a subclass of mquery() and works the same way but with the\n *     // default query parameters and options set.\n *\n *     // run a query with the previous settings but filter for movies with names\n *     // that start with \"Life\".\n *     Video().where({ name: /^Life/ }).exec(cb);\n *\n * @return {Query} new Query\n * @api public\n */\n\nQuery.prototype.toConstructor = function toConstructor () {\n  function CustomQuery (criteria, options) {\n    if (!(this instanceof CustomQuery))\n      return new CustomQuery(criteria, options);\n    Query.call(this, criteria, options);\n  }\n\n  utils.inherits(CustomQuery, Query);\n\n  // set inherited defaults\n  var p = CustomQuery.prototype;\n\n  p.options = {};\n  p.setOptions(this.options);\n\n  p.op = this.op;\n  p._conditions = utils.clone(this._conditions);\n  p._fields = utils.clone(this._fields);\n  p._update = utils.clone(this._update);\n  p._path = this._path;\n  p._distinct = this._distinct;\n  p._collection = this._collection;\n  p._traceFunction = this._traceFunction;\n\n  return CustomQuery;\n}\n\n/**\n * Sets query options.\n *\n * ####Options:\n *\n * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *\n * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *\n * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *\n * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *\n * - [maxScan](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan) *\n * - [maxTime](http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS) *\n * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *\n * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *\n * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *\n * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *\n * - [slaveOk](http://docs.mongodb.org/manual/applications/replication/#read-preference) *\n * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)\n * - collection the collection to query against\n *\n * _* denotes a query helper method is also available_\n *\n * @param {Object} options\n * @api public\n */\n\nQuery.prototype.setOptions = function (options) {\n  if (!(options && utils.isObject(options)))\n    return this;\n\n  // set arbitrary options\n  var methods = utils.keys(options)\n    , method\n\n  for (var i = 0; i < methods.length; ++i) {\n    method = methods[i];\n\n    // use methods if exist (safer option manipulation)\n    if ('function' == typeof this[method]) {\n      var args = utils.isArray(options[method])\n        ? options[method]\n        : [options[method]];\n      this[method].apply(this, args)\n    } else {\n      this.options[method] = options[method];\n    }\n  }\n\n  return this;\n}\n\n/**\n * Sets this Querys collection.\n *\n * @param {Collection} coll\n * @return {Query} this\n */\n\nQuery.prototype.collection = function collection (coll) {\n  this._collection = new Query.Collection(coll);\n\n  return this;\n}\n\n/**\n * Specifies a `$where` condition\n *\n * Use `$where` when you need to select documents using a JavaScript expression.\n *\n * ####Example\n *\n *     query.$where('this.comments.length > 10 || this.name.length > 5')\n *\n *     query.$where(function () {\n *       return this.comments.length > 10 || this.name.length > 5;\n *     })\n *\n * @param {String|Function} js javascript string or function\n * @return {Query} this\n * @memberOf Query\n * @method $where\n * @api public\n */\n\nQuery.prototype.$where = function (js) {\n  this._conditions.$where = js;\n  return this;\n}\n\n/**\n * Specifies a `path` for use with chaining.\n *\n * ####Example\n *\n *     // instead of writing:\n *     User.find({age: {$gte: 21, $lte: 65}}, callback);\n *\n *     // we can instead write:\n *     User.where('age').gte(21).lte(65);\n *\n *     // passing query conditions is permitted\n *     User.find().where({ name: 'vonderful' })\n *\n *     // chaining\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^vonderful/i)\n *     .where('friends').slice(10)\n *     .exec(callback)\n *\n * @param {String} [path]\n * @param {Object} [val]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.where = function () {\n  if (!arguments.length) return this;\n  if (!this.op) this.op = 'find';\n\n  var type = typeof arguments[0];\n\n  if ('string' == type) {\n    this._path = arguments[0];\n\n    if (2 === arguments.length) {\n      this._conditions[this._path] = arguments[1];\n    }\n\n    return this;\n  }\n\n  if ('object' == type && !Array.isArray(arguments[0])) {\n    return this.merge(arguments[0]);\n  }\n\n  throw new TypeError('path must be a string or object');\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n *\n * ####Example\n *\n *     User.where('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.equals = function equals (val) {\n  this._ensurePath('equals');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies the complementary comparison value for paths specified with `where()`\n * This is alias of `equals`\n *\n * ####Example\n *\n *     User.where('age').eq(49);\n *\n *     // is the same as\n *\n *     User.shere('age').equals(49);\n *\n *     // is the same as\n *\n *     User.where('age', 49);\n *\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.eq = function eq (val) {\n  this._ensurePath('eq');\n  var path = this._path;\n  this._conditions[path] = val;\n  return this;\n}\n\n/**\n * Specifies arguments for an `$or` condition.\n *\n * ####Example\n *\n *     query.or([{ color: 'red' }, { status: 'emergency' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.or = function or (array) {\n  var or = this._conditions.$or || (this._conditions.$or = []);\n  if (!utils.isArray(array)) array = [array];\n  or.push.apply(or, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$nor` condition.\n *\n * ####Example\n *\n *     query.nor([{ color: 'green' }, { status: 'ok' }])\n *\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.nor = function nor (array) {\n  var nor = this._conditions.$nor || (this._conditions.$nor = []);\n  if (!utils.isArray(array)) array = [array];\n  nor.push.apply(nor, array);\n  return this;\n}\n\n/**\n * Specifies arguments for a `$and` condition.\n *\n * ####Example\n *\n *     query.and([{ color: 'green' }, { status: 'ok' }])\n *\n * @see $and http://docs.mongodb.org/manual/reference/operator/and/\n * @param {Array} array array of conditions\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.and = function and (array) {\n  var and = this._conditions.$and || (this._conditions.$and = []);\n  if (!Array.isArray(array)) array = [array];\n  and.push.apply(and, array);\n  return this;\n}\n\n/**\n * Specifies a $gt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * ####Example\n *\n *     Thing.find().where('age').gt(21)\n *\n *     // or\n *     Thing.find().gt('age', 21)\n *\n * @method gt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $gte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method gte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lt query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lt\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $lte query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method lte\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $ne query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method ne\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $in query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method in\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $nin query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method nin\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies an $all query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method all\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $size query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method size\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/**\n * Specifies a $regex query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method regex\n * @memberOf Query\n * @param {String} [path]\n * @param {String|RegExp} val\n * @api public\n */\n\n/**\n * Specifies a $maxDistance query condition.\n *\n * When called with one argument, the most recent path passed to `where()` is used.\n *\n * @method maxDistance\n * @memberOf Query\n * @param {String} [path]\n * @param {Number} val\n * @api public\n */\n\n/*!\n * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance\n *\n *     Thing.where('type').nin(array)\n */\n\n'gt gte lt lte ne in nin all regex size maxDistance minDistance'.split(' ').forEach(function ($conditional) {\n  Query.prototype[$conditional] = function () {\n    var path, val;\n\n    if (1 === arguments.length) {\n      this._ensurePath($conditional);\n      val = arguments[0];\n      path = this._path;\n    } else {\n      val = arguments[1];\n      path = arguments[0];\n    }\n\n    var conds = this._conditions[path] === null || typeof this._conditions[path] === 'object' ?\n      this._conditions[path] :\n      (this._conditions[path] = {});\n    conds['$' + $conditional] = val;\n    return this;\n  };\n})\n\n/**\n * Specifies a `$mod` condition\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.mod = function () {\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('mod')\n    val = arguments[0];\n    path = this._path;\n  } else if (2 === arguments.length && !utils.isArray(arguments[1])) {\n    this._ensurePath('mod')\n    val = slice(arguments);\n    path = this._path;\n  } else if (3 === arguments.length) {\n    val = slice(arguments, 1);\n    path = arguments[0];\n  } else {\n    val = arguments[1];\n    path = arguments[0];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$mod = val;\n  return this;\n}\n\n/**\n * Specifies an `$exists` condition\n *\n * ####Example\n *\n *     // { name: { $exists: true }}\n *     Thing.where('name').exists()\n *     Thing.where('name').exists(true)\n *     Thing.find().exists('name')\n *\n *     // { name: { $exists: false }}\n *     Thing.where('name').exists(false);\n *     Thing.find().exists('name', false);\n *\n * @param {String} [path]\n * @param {Number} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.exists = function () {\n  var path, val;\n\n  if (0 === arguments.length) {\n    this._ensurePath('exists');\n    path = this._path;\n    val = true;\n  } else if (1 === arguments.length) {\n    if ('boolean' === typeof arguments[0]) {\n      this._ensurePath('exists');\n      path = this._path;\n      val = arguments[0];\n    } else {\n      path = arguments[0];\n      val = true;\n    }\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$exists = val;\n  return this;\n}\n\n/**\n * Specifies an `$elemMatch` condition\n *\n * ####Example\n *\n *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})\n *\n *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n *\n *     query.elemMatch('comment', function (elem) {\n *       elem.where('author').equals('autobot');\n *       elem.where('votes').gte(5);\n *     })\n *\n *     query.where('comment').elemMatch(function (elem) {\n *       elem.where({ author: 'autobot' });\n *       elem.where('votes').gte(5);\n *     })\n *\n * @param {String|Object|Function} path\n * @param {Object|Function} criteria\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.elemMatch = function () {\n  if (null == arguments[0])\n    throw new TypeError(\"Invalid argument\");\n\n  var fn, path, criteria;\n\n  if ('function' === typeof arguments[0]) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    fn = arguments[0];\n  } else if (utils.isObject(arguments[0])) {\n    this._ensurePath('elemMatch');\n    path = this._path;\n    criteria = arguments[0];\n  } else if ('function' === typeof arguments[1]) {\n    path = arguments[0];\n    fn = arguments[1];\n  } else if (arguments[1] && utils.isObject(arguments[1])) {\n    path = arguments[0];\n    criteria = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (fn) {\n    criteria = new Query;\n    fn(criteria);\n    criteria = criteria._conditions;\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds.$elemMatch = criteria;\n  return this;\n}\n\n// Spatial queries\n\n/**\n * Sugar for geo-spatial queries.\n *\n * ####Example\n *\n *     query.within().box()\n *     query.within().circle()\n *     query.within().geometry()\n *\n *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\n *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\n *     query.where('loc').within({ polygon: [[],[],[],[]] });\n *\n *     query.where('loc').within([], [], []) // polygon\n *     query.where('loc').within([], []) // box\n *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n *\n * ####NOTE:\n *\n * Must be used after `where()`.\n *\n * @memberOf Query\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.within = function within () {\n  // opinionated, must be used after where\n  this._ensurePath('within');\n  this._geoComparison = $withinCmd;\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  if (2 === arguments.length) {\n    return this.box.apply(this, arguments);\n  } else if (2 < arguments.length) {\n    return this.polygon.apply(this, arguments);\n  }\n\n  var area = arguments[0];\n\n  if (!area)\n    throw new TypeError('Invalid argument');\n\n  if (area.center)\n    return this.circle(area);\n\n  if (area.box)\n    return this.box.apply(this, area.box);\n\n  if (area.polygon)\n    return this.polygon.apply(this, area.polygon);\n\n  if (area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a $box condition\n *\n * ####Example\n *\n *     var lowerLeft = [40.73083, -73.99756]\n *     var upperRight= [40.741404,  -73.988135]\n *\n *     query.where('loc').within().box(lowerLeft, upperRight)\n *     query.box('loc', lowerLeft, upperRight )\n *\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see Query#within #query_Query-within\n * @param {String} path\n * @param {Object} val\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.box = function () {\n  var path, box;\n\n  if (3 === arguments.length) {\n    // box('loc', [], [])\n    path = arguments[0];\n    box = [arguments[1], arguments[2]];\n  } else if (2 === arguments.length) {\n    // box([], [])\n    this._ensurePath('box');\n    path = this._path;\n    box = [arguments[0], arguments[1]];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$box': box  };\n  return this;\n}\n\n/**\n * Specifies a $polygon condition\n *\n * ####Example\n *\n *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])\n *     query.polygon('loc', [10,20], [13, 25], [7,15])\n *\n * @param {String|Array} [path]\n * @param {Array|Object} [val]\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.polygon = function () {\n  var val, path;\n\n  if ('string' == typeof arguments[0]) {\n    // polygon('loc', [],[],[])\n    path = arguments[0];\n    val = slice(arguments, 1);\n  } else {\n    // polygon([],[],[])\n    this._ensurePath('polygon');\n    path = this._path;\n    val = slice(arguments);\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison || $withinCmd] = { '$polygon': val };\n  return this;\n}\n\n/**\n * Specifies a $center or $centerSphere condition.\n *\n * ####Example\n *\n *     var area = { center: [50, 50], radius: 10, unique: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n *     // for spherical calculations\n *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }\n *     query.where('loc').within().circle(area)\n *     query.center('loc', area);\n *\n * @param {String} [path]\n * @param {Object} area\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.circle = function () {\n  var path, val;\n\n  if (1 === arguments.length) {\n    this._ensurePath('circle');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!('radius' in val && val.center))\n    throw new Error('center and radius are required');\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$centerSphere'\n    : '$center';\n\n  var wKey = this._geoComparison || $withinCmd;\n  conds[wKey] = {};\n  conds[wKey][type] = [val.center, val.radius];\n\n  if ('unique' in val)\n    conds[wKey].$uniqueDocs = !! val.unique;\n\n  return this;\n}\n\n/**\n * Specifies a `$near` or `$nearSphere` condition\n *\n * These operators return documents sorted by distance.\n *\n * ####Example\n *\n *     query.where('loc').near({ center: [10, 10] });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });\n *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });\n *     query.near('loc', { center: [10, 10], maxDistance: 5 });\n *     query.near({ center: { type: 'Point', coordinates: [..] }})\n *     query.near().geometry({ type: 'Point', coordinates: [..] })\n *\n * @param {String} [path]\n * @param {Object} val\n * @return {Query} this\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @api public\n */\n\nQuery.prototype.near = function near () {\n  var path, val;\n\n  this._geoComparison = '$near';\n\n  if (0 === arguments.length) {\n    return this;\n  } else if (1 === arguments.length) {\n    this._ensurePath('near');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    path = arguments[0];\n    val = arguments[1];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!val.center) {\n    throw new Error('center is required');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n\n  var type = val.spherical\n    ? '$nearSphere'\n    : '$near';\n\n  // center could be a GeoJSON object or an Array\n  if (Array.isArray(val.center)) {\n    conds[type] = val.center;\n\n    var radius = 'maxDistance' in val\n      ? val.maxDistance\n      : null;\n\n    if (null != radius) {\n      conds.$maxDistance = radius;\n    }\n    if (null != val.minDistance) {\n      conds.$minDistance = val.minDistance;\n    }\n  } else {\n    // GeoJSON?\n    if (val.center.type != 'Point' || !Array.isArray(val.center.coordinates)) {\n      throw new Error(util.format(\"Invalid GeoJSON specified for %s\", type));\n    }\n    conds[type] = { $geometry : val.center };\n\n    // MongoDB 2.6 insists on maxDistance being in $near / $nearSphere\n    if ('maxDistance' in val) {\n      conds[type]['$maxDistance'] = val.maxDistance;\n    }\n    if ('minDistance' in val) {\n      conds[type]['$minDistance'] = val.minDistance;\n    }\n  }\n\n  return this;\n}\n\n/**\n * Declares an intersects query for `geometry()`.\n *\n * ####Example\n *\n *     query.where('path').intersects().geometry({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n *     query.where('path').intersects({\n *         type: 'LineString'\n *       , coordinates: [[180.0, 11.0], [180, 9.0]]\n *     })\n *\n * @param {Object} [arg]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.intersects = function intersects () {\n  // opinionated, must be used after where\n  this._ensurePath('intersects');\n\n  this._geoComparison = '$geoIntersects';\n\n  if (0 === arguments.length) {\n    return this;\n  }\n\n  var area = arguments[0];\n\n  if (null != area && area.type && area.coordinates)\n    return this.geometry(area);\n\n  throw new TypeError('Invalid argument');\n}\n\n/**\n * Specifies a `$geometry` condition\n *\n * ####Example\n *\n *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\n *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n *\n *     // or\n *     var polyB = [[ 0, 0 ], [ 1, 1 ]]\n *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n *\n *     // or\n *     var polyC = [ 0, 0 ]\n *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n *\n *     // or\n *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n *\n * ####NOTE:\n *\n * `geometry()` **must** come after either `intersects()` or `within()`.\n *\n * The `object` argument must contain `type` and `coordinates` properties.\n * - type {String}\n * - coordinates {Array}\n *\n * The most recent path passed to `where()` is used.\n *\n * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples.\n * @return {Query} this\n * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry\n * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing\n * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/\n * @api public\n */\n\nQuery.prototype.geometry = function geometry () {\n  if (!('$within' == this._geoComparison ||\n        '$geoWithin' == this._geoComparison ||\n        '$near' == this._geoComparison ||\n        '$geoIntersects' == this._geoComparison)) {\n    throw new Error('geometry() must come after `within()`, `intersects()`, or `near()');\n  }\n\n  var val, path;\n\n  if (1 === arguments.length) {\n    this._ensurePath('geometry');\n    path = this._path;\n    val = arguments[0];\n  } else {\n    throw new TypeError(\"Invalid argument\");\n  }\n\n  if (!(val.type && Array.isArray(val.coordinates))) {\n    throw new TypeError('Invalid argument');\n  }\n\n  var conds = this._conditions[path] || (this._conditions[path] = {});\n  conds[this._geoComparison] = { $geometry: val };\n\n  return this;\n}\n\n// end spatial\n\n/**\n * Specifies which document fields to include or exclude\n *\n * ####String syntax\n *\n * When passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included.\n *\n * ####Example\n *\n *     // include a and b, exclude c\n *     query.select('a b -c');\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     query.select({a: 1, b: 1, c: 0});\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|String} arg\n * @return {Query} this\n * @see SchemaType\n * @api public\n */\n\nQuery.prototype.select = function select () {\n  var arg = arguments[0];\n  if (!arg) return this;\n\n  if (arguments.length !== 1) {\n    throw new Error(\"Invalid select: select only takes 1 argument\");\n  }\n\n  this._validate('select');\n\n  var fields = this._fields || (this._fields = {});\n  var type = typeof arg;\n\n  if (('string' == type || utils.isArgumentsObject(arg)) &&\n    'number' == typeof arg.length || Array.isArray(arg)) {\n    if ('string' == type)\n      arg = arg.split(/\\s+/);\n\n    for (var i = 0, len = arg.length; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var include = '-' == field[0] ? 0 : 1;\n      if (include === 0) field = field.substring(1);\n      fields[field] = include;\n    }\n\n    return this;\n  }\n\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      fields[keys[i]] = arg[keys[i]];\n    }\n    return this;\n  }\n\n  throw new TypeError('Invalid select() argument. Must be string or object.');\n}\n\n/**\n * Specifies a $slice condition for a `path`\n *\n * ####Example\n *\n *     query.slice('comments', 5)\n *     query.slice('comments', -5)\n *     query.slice('comments', [10, 5])\n *     query.where('comments').slice(5)\n *     query.where('comments').slice([-10, 5])\n *\n * @param {String} [path]\n * @param {Number} val number/range of elements to slice\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements\n * @api public\n */\n\nQuery.prototype.slice = function () {\n  if (0 === arguments.length)\n    return this;\n\n  this._validate('slice');\n\n  var path, val;\n\n  if (1 === arguments.length) {\n    var arg = arguments[0];\n    if (typeof arg === 'object' && !Array.isArray(arg)) {\n      var keys = Object.keys(arg);\n      var numKeys = keys.length;\n      for (var i = 0; i < numKeys; ++i) {\n        this.slice(keys[i], arg[keys[i]]);\n      }\n      return this;\n    }\n    this._ensurePath('slice');\n    path = this._path;\n    val = arguments[0];\n  } else if (2 === arguments.length) {\n    if ('number' === typeof arguments[0]) {\n      this._ensurePath('slice');\n      path = this._path;\n      val = slice(arguments);\n    } else {\n      path = arguments[0];\n      val = arguments[1];\n    }\n  } else if (3 === arguments.length) {\n    path = arguments[0];\n    val = slice(arguments, 1);\n  }\n\n  var myFields = this._fields || (this._fields = {});\n  myFields[path] = { '$slice': val };\n  return this;\n}\n\n/**\n * Sets the sort order\n *\n * If an object is passed, values allowed are 'asc', 'desc', 'ascending', 'descending', 1, and -1.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * ####Example\n *\n *     // these are equivalent\n *     query.sort({ field: 'asc', test: -1 });\n *     query.sort('field -test');\n *     query.sort([['field', 1], ['test', -1]]);\n *\n * ####Note\n *\n *  - The array syntax `.sort([['field', 1], ['test', -1]])` can only be used with [mongodb driver >= 2.0.46](https://github.com/mongodb/node-mongodb-native/blob/2.1/HISTORY.md#2046-2015-10-15).\n *  - Cannot be used with `distinct()`\n *\n * @param {Object|String|Array} arg\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.sort = function (arg) {\n  if (!arg) return this;\n  var len;\n\n  this._validate('sort');\n\n  var type = typeof arg;\n\n  // .sort([['field', 1], ['test', -1]])\n  if (Array.isArray(arg)) {\n    len = arg.length;\n    for (var i = 0; i < arg.length; ++i) {\n      if (!Array.isArray(arg[i])) {\n        throw new Error('Invalid sort() argument, must be array of arrays');\n      }\n      _pushArr(this.options, arg[i][0], arg[i][1]);\n    }\n    return this;\n  }\n\n  // .sort('field -test')\n  if (1 === arguments.length && 'string' == type) {\n    arg = arg.split(/\\s+/);\n    len = arg.length;\n    for (var i = 0; i < len; ++i) {\n      var field = arg[i];\n      if (!field) continue;\n      var ascend = '-' == field[0] ? -1 : 1;\n      if (ascend === -1) field = field.substring(1);\n      push(this.options, field, ascend);\n    }\n\n    return this;\n  }\n\n  // .sort({ field: 1, test: -1 })\n  if (utils.isObject(arg)) {\n    var keys = utils.keys(arg);\n    for (var i = 0; i < keys.length; ++i) {\n      var field = keys[i];\n      push(this.options, field, arg[field]);\n    }\n\n    return this;\n  }\n\n  if (typeof Map !== 'undefined' && arg instanceof Map) {\n    _pushMap(this.options, arg);\n    return this;\n  }\n\n  throw new TypeError('Invalid sort() argument. Must be a string, object, or array.');\n}\n\n/*!\n * @ignore\n */\n\nfunction push (opts, field, value) {\n  if (Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n\n  if (value && value.$meta) {\n    var s = opts.sort || (opts.sort = {});\n    s[field] = { $meta : value.$meta };\n    return;\n  }\n\n  var val = String(value || 1).toLowerCase();\n  if (!/^(?:ascending|asc|descending|desc|1|-1)$/.test(val)) {\n    if (utils.isArray(value)) value = '['+value+']';\n    throw new TypeError('Invalid sort value: {' + field + ': ' + value + ' }');\n  }\n  // store `sort` in a sane format\n  var s = opts.sort || (opts.sort = {});\n  var valueStr = value.toString()\n                  .replace(\"asc\", \"1\")\n                  .replace(\"ascending\", \"1\")\n                  .replace(\"desc\", \"-1\")\n                  .replace(\"descending\", \"-1\");\n  s[field] = parseInt(valueStr, 10);\n}\n\nfunction _pushArr (opts, field, value) {\n  opts.sort = opts.sort || [];\n  if (!Array.isArray(opts.sort)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or object:\" +\n      \"\\n- `.sort([['field', 1], ['test', -1]])`\" +\n      \"\\n- `.sort({ field: 1, test: -1 })`\");\n  }\n  var valueStr = value.toString()\n    .replace(\"asc\", \"1\")\n    .replace(\"ascending\", \"1\")\n    .replace(\"desc\", \"-1\")\n    .replace(\"descending\", \"-1\");\n  opts.sort.push([field, value]);\n}\n\nfunction _pushMap (opts, map) {\n  opts.sort = opts.sort || new Map();\n  if (!(opts.sort instanceof Map)) {\n    throw new TypeError(\"Can't mix sort syntaxes. Use either array or \" +\n      \"object or map consistently\");\n  }\n  map.forEach(function(value, key) {\n    var valueStr = value.toString()\n      .replace(\"asc\", \"1\")\n      .replace(\"ascending\", \"1\")\n      .replace(\"desc\", \"-1\")\n      .replace(\"descending\", \"-1\");\n    opts.sort.set(key, valueStr);\n  });\n}\n\n/**\n * Specifies the limit option.\n *\n * ####Example\n *\n *     query.limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method limit\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the skip option.\n *\n * ####Example\n *\n *     query.skip(100).limit(20)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method skip\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the maxScan option.\n *\n * ####Example\n *\n *     query.maxScan(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method maxScan\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24maxScan\n * @api public\n */\n/**\n * Specifies the batchSize option.\n *\n * ####Example\n *\n *     query.batchSize(100)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method batchSize\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D\n * @api public\n */\n/**\n * Specifies the `comment` option.\n *\n * ####Example\n *\n *     query.comment('login query')\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @method comment\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment\n * @api public\n */\n\n/*!\n * limit, skip, maxScan, batchSize, comment\n *\n * Sets these associated options.\n *\n *     query.comment('feed query');\n */\n\n;['limit', 'skip', 'maxScan', 'batchSize', 'comment'].forEach(function (method) {\n  Query.prototype[method] = function (v) {\n    this._validate(method);\n    this.options[method] = v;\n    return this;\n  };\n})\n\n/**\n * Specifies the maxTimeMS option.\n *\n * ####Example\n *\n *     query.maxTime(100)\n *\n * @method maxTime\n * @memberOf Query\n * @param {Number} val\n * @see mongodb http://docs.mongodb.org/manual/reference/operator/meta/maxTimeMS/#op._S_maxTimeMS\n * @api public\n */\n\nQuery.prototype.maxTime = function (v) {\n  this._validate('maxTime');\n  this.options.maxTimeMS = v;\n  return this;\n};\n\n/**\n * Specifies this query as a `snapshot` query.\n *\n * ####Example\n *\n *     mquery().snapshot() // true\n *     mquery().snapshot(true)\n *     mquery().snapshot(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.snapshot = function () {\n  this._validate('snapshot');\n\n  this.options.snapshot = arguments.length\n    ? !! arguments[0]\n    : true\n\n  return this;\n}\n\n/**\n * Sets query hints.\n *\n * ####Example\n *\n *     query.hint({ indexA: 1, indexB: -1});\n *     query.hint('indexA_1_indexB_1');\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Object|string} val a hint object or the index name\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint\n * @api public\n */\n\nQuery.prototype.hint = function () {\n  if (0 === arguments.length) return this;\n\n  this._validate('hint');\n\n  var arg = arguments[0];\n  if (utils.isObject(arg)) {\n    var hint = this.options.hint || (this.options.hint = {});\n\n    // must keep object keys in order so don't use Object.keys()\n    for (var k in arg) {\n      hint[k] = arg[k];\n    }\n\n    return this;\n  }\n  if (typeof arg === 'string') {\n    this.options.hint = arg;\n    return this;\n  }\n\n  throw new TypeError('Invalid hint. ' + arg);\n}\n\n/**\n * Sets the slaveOk option. _Deprecated_ in MongoDB 2.2 in favor of read preferences.\n *\n * ####Example:\n *\n *     query.slaveOk() // true\n *     query.slaveOk(true)\n *     query.slaveOk(false)\n *\n * @deprecated use read() preferences instead if on mongodb >= 2.2\n * @param {Boolean} v defaults to true\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see read()\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.slaveOk = function (v) {\n  this.options.slaveOk = arguments.length ? !!v : true;\n  return this;\n}\n\n/**\n * Sets the readPreference option for the query.\n *\n * ####Example:\n *\n *     new Query().read('primary')\n *     new Query().read('p')  // same as primary\n *\n *     new Query().read('primaryPreferred')\n *     new Query().read('pp') // same as primaryPreferred\n *\n *     new Query().read('secondary')\n *     new Query().read('s')  // same as secondary\n *\n *     new Query().read('secondaryPreferred')\n *     new Query().read('sp') // same as secondaryPreferred\n *\n *     new Query().read('nearest')\n *     new Query().read('n')  // same as nearest\n *\n *     // you can also use mongodb.ReadPreference class to also specify tags\n *     new Query().read(mongodb.ReadPreference('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]))\n *\n * ####Preferences:\n *\n *     primary - (default)  Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n *     secondary            Read from secondary if available, otherwise error.\n *     primaryPreferred     Read from primary if available, otherwise a secondary.\n *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary.\n *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n *\n * Aliases\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * Read more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences).\n *\n * @param {String|ReadPreference} pref one of the listed preference options or their aliases\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.read = function (pref) {\n  if (arguments.length > 1 && !Query.prototype.read.deprecationWarningIssued) {\n    console.error(\"Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead.\");\n    Query.prototype.read.deprecationWarningIssued = true;\n  }\n  this.options.readPreference = utils.readPref(pref);\n  return this;\n}\n\n/**\n * Sets tailable option.\n *\n * ####Example\n *\n *     query.tailable() <== true\n *     query.tailable(true)\n *     query.tailable(false)\n *\n * ####Note\n *\n * Cannot be used with `distinct()`\n *\n * @param {Boolean} v defaults to true\n * @see mongodb http://www.mongodb.org/display/DOCS/Tailable+Cursors\n * @api public\n */\n\nQuery.prototype.tailable = function () {\n  this._validate('tailable');\n\n  this.options.tailable = arguments.length\n    ? !! arguments[0]\n    : true;\n\n  return this;\n}\n\n/**\n * Merges another Query or conditions object into this one.\n *\n * When a Query is passed, conditions, field selection and options are merged.\n *\n * @param {Query|Object} source\n * @return {Query} this\n */\n\nQuery.prototype.merge = function (source) {\n  if (!source)\n    return this;\n\n  if (!Query.canMerge(source))\n    throw new TypeError('Invalid argument. Expected instanceof mquery or plain object');\n\n  if (source instanceof Query) {\n    // if source has a feature, apply it to ourselves\n\n    if (source._conditions) {\n      utils.merge(this._conditions, source._conditions);\n    }\n\n    if (source._fields) {\n      this._fields || (this._fields = {});\n      utils.merge(this._fields, source._fields);\n    }\n\n    if (source.options) {\n      this.options || (this.options = {});\n      utils.merge(this.options, source.options);\n    }\n\n    if (source._update) {\n      this._update || (this._update = {});\n      utils.mergeClone(this._update, source._update);\n    }\n\n    if (source._distinct) {\n      this._distinct = source._distinct;\n    }\n\n    return this;\n  }\n\n  // plain object\n  utils.merge(this._conditions, source);\n\n  return this;\n}\n\n/**\n * Finds documents.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.find()\n *     query.find(callback)\n *     query.find({ name: 'Burning Lights' }, callback)\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.find = function (criteria, callback) {\n  this.op = 'find';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('find', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('find', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.find(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Returns the query cursor\n *\n * ####Examples\n *\n *     query.find().cursor();\n *     query.cursor({ name: 'Burning Lights' });\n *\n * @param {Object} [criteria] mongodb selector\n * @return {Object} cursor\n * @api public\n */\n\nQuery.prototype.cursor = function cursor (criteria) {\n  if (this.op) {\n    if (this.op !== 'find') {\n      throw new TypeError(\".cursor only support .find method\");\n    }\n  } else {\n    this.find(criteria);\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec()\n\n  debug('findCursor', this._collection.collectionName, conds, options);\n  return this._collection.findCursor(conds, options);\n}\n\n/**\n * Executes the query as a findOne() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.findOne().where('name', /^Burning/);\n *\n *     query.findOne({ name: /^Burning/ })\n *\n *     query.findOne({ name: /^Burning/ }, callback); // executes\n *\n *     query.findOne(function (err, doc) {\n *       if (err) return handleError(err);\n *       if (doc) {\n *         // doc may be null if no document matched\n *\n *       }\n *     });\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOne = function (criteria, callback) {\n  this.op = 'findOne';\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var self = this\n    , conds = this._conditions\n    , options = this._optionsForExec()\n\n  options.fields = this._fieldsForExec();\n\n  debug('findOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('findOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.findOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Exectues the query as a count() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     query.count().where('color', 'black').exec(callback);\n *\n *     query.count({ color: 'black' }).count(callback)\n *\n *     query.count({ color: 'black' }, callback)\n *\n *     query.where('color', 'black').count(function (err, count) {\n *       if (err) return handleError(err);\n *       console.log('there are %d kittens', count);\n *     })\n *\n * @param {Object} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Count\n * @api public\n */\n\nQuery.prototype.count = function (criteria, callback) {\n  this.op = 'count';\n  this._validate();\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) return this;\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('count', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('count', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.count(conds, options, utils.tick(callback));\n  return this;\n}\n\n/**\n * Declares or executes a distinct() operation.\n *\n * Passing a `callback` executes the query.\n *\n * ####Example\n *\n *     distinct(criteria, field, fn)\n *     distinct(criteria, field)\n *     distinct(field, fn)\n *     distinct(field)\n *     distinct(fn)\n *     distinct()\n *\n * @param {Object|Query} [criteria]\n * @param {String} [field]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/Aggregation#Aggregation-Distinct\n * @api public\n */\n\nQuery.prototype.distinct = function (criteria, field, callback) {\n  this.op = 'distinct';\n  this._validate();\n\n  if (!callback) {\n    switch (typeof field) {\n      case 'function':\n        callback = field;\n        if ('string' == typeof criteria) {\n          field = criteria;\n          criteria = undefined;\n        }\n        break;\n      case 'undefined':\n      case 'string':\n        break;\n      default:\n        throw new TypeError('Invalid `field` argument. Must be string or function')\n        break;\n    }\n\n    switch (typeof criteria) {\n      case 'function':\n        callback = criteria;\n        criteria = field = undefined;\n        break;\n      case 'string':\n        field = criteria;\n        criteria = undefined;\n        break;\n    }\n  }\n\n  if ('string' == typeof field) {\n    this._distinct = field;\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  if (!callback) {\n    return this;\n  }\n\n  if (!this._distinct) {\n    throw new Error('No value for `distinct` has been declared');\n  }\n\n  var conds = this._conditions\n    , options = this._optionsForExec()\n\n  debug('distinct', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('distinct', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.distinct(this._distinct, conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as an update() operation. By default,\n * `update()` only modifies the _first_ document that matches `criteria`.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     mquery({ _id: id }).update({ title: 'words' }, ...)\n *\n * becomes\n *\n *     collection.update({ _id: id }, { $set: { title: 'words' }}, ...)\n *\n * ####Note\n *\n * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection.\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call update() and then execute it by using the `exec()` method.\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).update(); // not executed\n *\n *     var q = mquery(collection).where({ _id: id });\n *     q.update({ $set: { name: 'bob' }}).exec(); // executed as unsafe\n *\n *     // keys that are not $atomic ops become $set.\n *     // this executes the same command as the previous example.\n *     q.update({ name: 'bob' }).where({ _id: id }).exec();\n *\n *     var q = mquery(collection).update(); // not executed\n *\n *     // overwriting with empty docs\n *     var q.where({ _id: id }).setOptions({ overwrite: true })\n *     q.update({ }, callback); // executes\n *\n *     // multi update with overwrite to empty doc\n *     var q = mquery(collection).where({ _id: id });\n *     q.setOptions({ multi: true, overwrite: true })\n *     q.update({ });\n *     q.update(callback); // executed\n *\n *     // multi updates\n *     mquery()\n *       .collection(coll)\n *       .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)\n *     // more multi updates\n *     mquery({ })\n *       .collection(coll)\n *       .setOptions({ multi: true })\n *       .update({ $set: { arr: [] }}, callback)\n *\n *     // single update by default\n *     mquery({ email: 'address@example.com' })\n *      .collection(coll)\n *      .update({ $inc: { counter: 1 }}, callback)\n *\n *     // summary\n *     update(criteria, doc, opts, cb) // executes\n *     update(criteria, doc, opts)\n *     update(criteria, doc, cb) // executes\n *     update(criteria, doc)\n *     update(doc, cb) // executes\n *     update(doc)\n *     update(cb) // executes\n *     update(true) // executes (unsafe write)\n *     update()\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.update = function update (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'update', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `updateMany()` operation. Identical\n * to `update()` except `updateMany()` will update _all_ documents that match\n * `criteria`, rather than just the first one.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     // Update every document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateMany = function updateMany (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'updateMany', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `updateOne()` operation. Identical\n * to `update()` except `updateOne()` will _always_ update just one document,\n * regardless of the `multi` option.\n *\n * _All paths passed that are not $atomic operations will become $set ops._\n *\n * ####Example\n *\n *     // Update the first document whose `title` contains 'test'\n *     mquery().updateMany({ title: /test/ }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.updateOne = function updateOne (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  return _update(this, 'updateOne', criteria, doc, options, force, callback);\n}\n\n/**\n * Declare and/or execute this query as an `replaceOne()` operation. Similar\n * to `updateOne()`, except `replaceOne()` is not allowed to use atomic\n * modifiers (`$set`, `$push`, etc.). Calling `replaceOne()` will always\n * replace the existing doc.\n *\n * ####Example\n *\n *     // Replace the document with `_id` 1 with `{ _id: 1, year: 2017 }`\n *     mquery().replaceOne({ _id: 1 }, { year: 2017 })\n *\n * @param {Object} [criteria]\n * @param {Object} [doc] the update command\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.replaceOne = function replaceOne (criteria, doc, options, callback) {\n  var force;\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = undefined;\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      break;\n    case 1:\n      switch (typeof criteria) {\n        case 'function':\n          callback = criteria;\n          criteria = options = doc = undefined;\n          break;\n        case 'boolean':\n          // execution with no callback (unsafe write)\n          force = criteria;\n          criteria = undefined;\n          break;\n        default:\n          doc = criteria;\n          criteria = options = undefined;\n          break;\n      }\n  }\n\n  this.setOptions({ overwrite: true });\n  return _update(this, 'replaceOne', criteria, doc, options, force, callback);\n}\n\n\n/*!\n * Internal helper for update, updateMany, updateOne\n */\n\nfunction _update (query, op, criteria, doc, options, force, callback) {\n  query.op = op;\n\n  if (Query.canMerge(criteria)) {\n    query.merge(criteria);\n  }\n\n  if (doc) {\n    query._mergeUpdate(doc);\n  }\n\n  if (utils.isObject(options)) {\n    // { overwrite: true }\n    query.setOptions(options);\n  }\n\n  // we are done if we don't have callback and they are\n  // not forcing an unsafe write.\n  if (!(force || callback)) {\n    return query;\n  }\n\n  if (!query._update ||\n      !query.options.overwrite && 0 === utils.keys(query._update).length) {\n    callback && utils.soon(callback.bind(null, null, 0));\n    return query;\n  }\n\n  options = query._optionsForExec();\n  if (!callback) options.safe = false;\n\n  var criteria = query._conditions;\n  doc = query._updateForExec();\n\n  debug('update', query._collection.collectionName, criteria, doc, options);\n  callback = query._wrapCallback(op, callback, {\n    conditions: criteria\n  , doc: doc\n  , options: options\n  });\n\n  query._collection[op](criteria, doc, options, utils.tick(callback));\n\n  return query;\n}\n\n/**\n * Declare and/or execute this query as a remove() operation.\n *\n * ####Example\n *\n *     mquery(collection).remove({ artist: 'Anne Murray' }, callback)\n *\n * ####Note\n *\n * The operation is only executed when a callback is passed. To force execution without a callback (which would be an unsafe write), we must first call remove() and then execute it by using the `exec()` method.\n *\n *     // not executed\n *     var query = mquery(collection).remove({ name: 'Anne Murray' })\n *\n *     // executed\n *     mquery(collection).remove({ name: 'Anne Murray' }, callback)\n *     mquery(collection).remove({ name: 'Anne Murray' }).remove(callback)\n *\n *     // executed without a callback (unsafe write)\n *     query.exec()\n *\n *     // summary\n *     query.remove(conds, fn); // executes\n *     query.remove(conds)\n *     query.remove(fn) // executes\n *     query.remove()\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.remove = function (criteria, callback) {\n  this.op = 'remove';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n\n  var conds = this._conditions;\n\n  debug('remove', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('remove', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.remove(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a `deleteOne()` operation. Behaves like\n * `remove()`, except for ignores the `justOne` option and always deletes at\n * most one document.\n *\n * ####Example\n *\n *     mquery(collection).deleteOne({ artist: 'Anne Murray' }, callback)\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteOne = function (criteria, callback) {\n  this.op = 'deleteOne';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n  delete options.justOne;\n\n  var conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('deleteOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.deleteOne(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Declare and/or execute this query as a `deleteMany()` operation. Behaves like\n * `remove()`, except for ignores the `justOne` option and always deletes\n * _every_ document that matches `criteria`.\n *\n * ####Example\n *\n *     mquery(collection).deleteMany({ artist: 'Anne Murray' }, callback)\n *\n * @param {Object|Query} [criteria] mongodb selector\n * @param {Function} [callback]\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.deleteMany = function (criteria, callback) {\n  this.op = 'deleteMany';\n  var force;\n\n  if ('function' === typeof criteria) {\n    callback = criteria;\n    criteria = undefined;\n  } else if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  } else if (true === criteria) {\n    force = criteria;\n    criteria = undefined;\n  }\n\n  if (!(force || callback))\n    return this;\n\n  var options = this._optionsForExec()\n  if (!callback) options.safe = false;\n  delete options.justOne;\n\n  var conds = this._conditions;\n\n  debug('deleteOne', this._collection.collectionName, conds, options);\n  callback = this._wrapCallback('deleteOne', callback, {\n    conditions: conds\n  , options: options\n  });\n\n  this._collection.deleteMany(conds, options, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     query.findOneAndUpdate(conditions, update, options, callback) // executes\n *     query.findOneAndUpdate(conditions, update, options)  // returns Query\n *     query.findOneAndUpdate(conditions, update, callback) // executes\n *     query.findOneAndUpdate(conditions, update)           // returns Query\n *     query.findOneAndUpdate(update, callback)             // returns Query\n *     query.findOneAndUpdate(update)                       // returns Query\n *     query.findOneAndUpdate(callback)                     // executes\n *     query.findOneAndUpdate()                             // returns Query\n *\n * @param {Object|Query} [query]\n * @param {Object} [doc]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @return {Query} this\n * @api public\n */\n\nQuery.prototype.findOneAndUpdate = function (criteria, doc, options, callback) {\n  this.op = 'findOneAndUpdate';\n  this._validate();\n\n  switch (arguments.length) {\n    case 3:\n      if ('function' == typeof options) {\n        callback = options;\n        options = {};\n      }\n      break;\n    case 2:\n      if ('function' == typeof doc) {\n        callback = doc;\n        doc = criteria;\n        criteria = undefined;\n      }\n      options = undefined;\n      break;\n    case 1:\n      if ('function' == typeof criteria) {\n        callback = criteria;\n        criteria = options = doc = undefined;\n      } else {\n        doc = criteria;\n        criteria = options = undefined;\n      }\n  }\n\n  if (Query.canMerge(criteria)) {\n    this.merge(criteria);\n  }\n\n  // apply doc\n  if (doc) {\n    this._mergeUpdate(doc);\n  }\n\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n  return this._findAndModify('update', callback);\n}\n\n/**\n * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command.\n *\n * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed.\n *\n * ####Available options\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Examples\n *\n *     A.where().findOneAndRemove(conditions, options, callback) // executes\n *     A.where().findOneAndRemove(conditions, options)  // return Query\n *     A.where().findOneAndRemove(conditions, callback) // executes\n *     A.where().findOneAndRemove(conditions) // returns Query\n *     A.where().findOneAndRemove(callback)   // executes\n *     A.where().findOneAndRemove()           // returns Query\n *\n * @param {Object} [conditions]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query} this\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nQuery.prototype.findOneAndRemove = function (conditions, options, callback) {\n  this.op = 'findOneAndRemove';\n  this._validate();\n\n  if ('function' == typeof options) {\n    callback = options;\n    options = undefined;\n  } else if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = undefined;\n  }\n\n  // apply conditions\n  if (Query.canMerge(conditions)) {\n    this.merge(conditions);\n  }\n\n  // apply options\n  options && this.setOptions(options);\n\n  if (!callback) return this;\n\n  return this._findAndModify('remove', callback);\n}\n\n/**\n * _findAndModify\n *\n * @param {String} type - either \"remove\" or \"update\"\n * @param {Function} callback\n * @api private\n */\n\nQuery.prototype._findAndModify = function (type, callback) {\n  assert.equal('function', typeof callback);\n\n  var opts = this._optionsForExec()\n    , self = this\n    , fields\n    , sort\n    , doc\n\n  if ('remove' == type) {\n    opts.remove = true;\n  } else {\n    if (!('new' in opts)) opts.new = true;\n    if (!('upsert' in opts)) opts.upsert = false;\n\n    doc = this._updateForExec()\n    if (!doc) {\n      if (opts.upsert) {\n        // still need to do the upsert to empty doc\n        doc = { $set: {} };\n      } else {\n        return this.findOne(callback);\n      }\n    }\n  }\n\n  var fields = this._fieldsForExec();\n  if (fields) {\n    opts.fields = fields;\n  }\n\n  var conds = this._conditions;\n\n  debug('findAndModify', this._collection.collectionName, conds, doc, opts);\n  callback = this._wrapCallback('findAndModify', callback, {\n    conditions: conds\n  , doc: doc\n  , options: opts\n  });\n\n  this._collection\n  .findAndModify(conds, doc, opts, utils.tick(callback));\n\n  return this;\n}\n\n/**\n * Wrap callback to add tracing\n *\n * @param {Function} callback\n * @param {Object} [queryInfo]\n * @api private\n */\nQuery.prototype._wrapCallback = function (method, callback, queryInfo) {\n  var traceFunction = this._traceFunction || Query.traceFunction;\n\n  if (traceFunction) {\n    queryInfo.collectionName = this._collection.collectionName;\n\n    var traceCallback = traceFunction &&\n      traceFunction.call(null, method, queryInfo, this);\n\n    var startTime = new Date().getTime();\n\n    return function wrapperCallback (err, result) {\n      if (traceCallback) {\n        var millis = new Date().getTime() - startTime;\n        traceCallback.call(null, err, result, millis);\n      }\n\n      if (callback) {\n        callback.apply(null, arguments);\n      }\n    };\n  }\n\n  return callback;\n}\n\n/**\n * Add trace function that gets called when the query is executed.\n * The function will be called with (method, queryInfo, query) and\n * should return a callback function which will be called\n * with (err, result, millis) when the query is complete.\n *\n * queryInfo is an object containing: {\n *   collectionName: <name of the collection>,\n *   conditions: <query criteria>,\n *   options: <comment, fields, readPreference, etc>,\n *   doc: [document to update, if applicable]\n * }\n *\n * NOTE: Does not trace stream queries.\n *\n * @param {Function} traceFunction\n * @return {Query} this\n * @api public\n */\nQuery.prototype.setTraceFunction = function (traceFunction) {\n  this._traceFunction = traceFunction;\n  return this;\n}\n\n/**\n * Executes the query\n *\n * ####Examples\n *\n *     query.exec();\n *     query.exec(callback);\n *     query.exec('update');\n *     query.exec('find', callback);\n *\n * @param {String|Function} [operation]\n * @param {Function} [callback]\n * @api public\n */\n\nQuery.prototype.exec = function exec (op, callback) {\n  switch (typeof op) {\n    case 'function':\n      callback = op;\n      op = null;\n      break;\n    case 'string':\n      this.op = op;\n      break;\n  }\n\n  assert.ok(this.op, \"Missing query type: (find, update, etc)\");\n\n  if ('update' == this.op || 'remove' == this.op) {\n    callback || (callback = true);\n  }\n\n  var self = this;\n\n  if ('function' == typeof callback) {\n    this[this.op](callback);\n  } else {\n    return new Query.Promise(function(success, error) {\n      self[self.op](function(err, val) {\n        if (err) error(err);\n        else success(val);\n        self = success = error = null;\n      });\n    });\n  }\n}\n\n/**\n * Returns a thunk which when called runs this.exec()\n *\n * The thunk receives a callback function which will be\n * passed to `this.exec()`\n *\n * @return {Function}\n * @api public\n */\n\nQuery.prototype.thunk = function() {\n  var self = this;\n  return function(cb) {\n    self.exec(cb);\n  }\n}\n\n/**\n * Executes the query returning a `Promise` which will be\n * resolved with either the doc(s) or rejected with the error.\n *\n * @param {Function} [resolve]\n * @param {Function} [reject]\n * @return {Promise}\n * @api public\n */\n\nQuery.prototype.then = function(resolve, reject) {\n  var self = this;\n  var promise = new Query.Promise(function(success, error) {\n    self.exec(function(err, val) {\n      if (err) error(err);\n      else success(val);\n      self = success = error = null;\n    });\n  });\n  return promise.then(resolve, reject);\n}\n\n/**\n * Returns a stream for the given find query.\n *\n * @throws Error if operation is not a find\n * @returns {Stream} Node 0.8 style\n */\n\nQuery.prototype.stream = function(streamOptions) {\n  if ('find' != this.op)\n    throw new Error('stream() is only available for find');\n\n  var conds = this._conditions;\n\n  var options = this._optionsForExec()\n  options.fields = this._fieldsForExec()\n\n  debug('stream', this._collection.collectionName, conds, options, streamOptions);\n\n  return this._collection.findStream(conds, options, streamOptions);\n}\n\n/**\n * Determines if field selection has been made.\n *\n * @return {Boolean}\n * @api public\n */\n\nQuery.prototype.selected = function selected () {\n  return !! (this._fields && Object.keys(this._fields).length > 0);\n}\n\n/**\n * Determines if inclusive field selection has been made.\n *\n *     query.selectedInclusively() // false\n *     query.select('name')\n *     query.selectedInclusively() // true\n *     query.selectedExlusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedInclusively = function selectedInclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return false;\n    if (this._fields[key] &&\n        typeof this._fields[key] === 'object' &&\n        this._fields[key].$meta) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines if exclusive field selection has been made.\n *\n *     query.selectedExlusively() // false\n *     query.select('-name')\n *     query.selectedExlusively() // true\n *     query.selectedInclusively() // false\n *\n * @returns {Boolean}\n */\n\nQuery.prototype.selectedExclusively = function selectedExclusively () {\n  if (!this._fields) return false;\n\n  var keys = Object.keys(this._fields);\n  if (0 === keys.length) return false;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    if (0 === this._fields[key]) return true;\n  }\n\n  return false;\n}\n\n/**\n * Merges `doc` with the current update object.\n *\n * @param {Object} doc\n */\n\nQuery.prototype._mergeUpdate = function (doc) {\n  if (!this._update) this._update = {};\n  if (doc instanceof Query) {\n    if (doc._update) {\n      utils.mergeClone(this._update, doc._update);\n    }\n  } else {\n    utils.mergeClone(this._update, doc);\n  }\n}\n\n/**\n * Returns default options.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._optionsForExec = function () {\n  var options = utils.clone(this.options);\n  return options;\n}\n\n/**\n * Returns fields selection for this query.\n *\n * @return {Object}\n * @api private\n */\n\nQuery.prototype._fieldsForExec = function () {\n  return utils.clone(this._fields);\n}\n\n/**\n * Return an update document with corrected $set operations.\n *\n * @api private\n */\n\nQuery.prototype._updateForExec = function () {\n  var update = utils.clone(this._update)\n    , ops = utils.keys(update)\n    , i = ops.length\n    , ret = {}\n    , hasKeys\n    , val\n\n  while (i--) {\n    var op = ops[i];\n\n    if (this.options.overwrite) {\n      ret[op] = update[op];\n      continue;\n    }\n\n    if ('$' !== op[0]) {\n      // fix up $set sugar\n      if (!ret.$set) {\n        if (update.$set) {\n          ret.$set = update.$set;\n        } else {\n          ret.$set = {};\n        }\n      }\n      ret.$set[op] = update[op];\n      ops.splice(i, 1);\n      if (!~ops.indexOf('$set')) ops.push('$set');\n    } else if ('$set' === op) {\n      if (!ret.$set) {\n        ret[op] = update[op];\n      }\n    } else {\n      ret[op] = update[op];\n    }\n  }\n\n  this._compiledUpdate = ret;\n  return ret;\n}\n\n/**\n * Make sure _path is set.\n *\n * @parmam {String} method\n */\n\nQuery.prototype._ensurePath = function (method) {\n  if (!this._path) {\n    var msg = method + '() must be used after where() '\n                     + 'when called with these arguments'\n    throw new Error(msg);\n  }\n}\n\n/*!\n * Permissions\n */\n\nQuery.permissions = require('./permissions');\n\nQuery._isPermitted = function (a, b) {\n  var denied = Query.permissions[b];\n  if (!denied) return true;\n  return true !== denied[a];\n}\n\nQuery.prototype._validate = function (action) {\n  var fail;\n  var validator;\n\n  if (undefined === action) {\n\n    validator = Query.permissions[this.op];\n    if ('function' != typeof validator) return true;\n\n    fail = validator(this);\n\n  } else if (!Query._isPermitted(action, this.op)) {\n    fail = action;\n  }\n\n  if (fail) {\n    throw new Error(fail + ' cannot be used with ' + this.op);\n  }\n}\n\n/**\n * Determines if `conds` can be merged using `mquery().merge()`\n *\n * @param {Object} conds\n * @return {Boolean}\n */\n\nQuery.canMerge = function (conds) {\n  return conds instanceof Query || utils.isObject(conds);\n}\n\n/**\n * Set a trace function that will get called whenever a\n * query is executed.\n *\n * See `setTraceFunction()` for details.\n *\n * @param {Object} conds\n * @return {Boolean}\n */\nQuery.setGlobalTraceFunction = function (traceFunction) {\n  Query.traceFunction = traceFunction;\n}\n\n/*!\n * Exports.\n */\n\nQuery.utils = utils;\nQuery.env = require('./env')\nQuery.Collection = require('./collection');\nQuery.BaseCollection = require('./collection/collection');\nQuery.Promise = require('bluebird');\nmodule.exports = exports = Query;\n\n// TODO\n// test utils\n"},"lineCount":3042}},"hash":"487ee21b2830738f8a675da85ba70bea","cacheData":{"env":{}}}