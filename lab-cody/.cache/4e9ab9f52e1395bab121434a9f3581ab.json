{"dependencies":[{"name":"/Users/codygreen/codefellows/401/labs/42-pagination/lab-cody/node_modules/mongoose/package.json","includedInParent":true,"mtime":1527551477000},{"name":"../drivers","loc":{"line":11,"column":23}}],"generated":{"js":"/**\n * ObjectId type constructor\n *\n * ####Example\n *\n *     var id = new mongoose.Types.ObjectId;\n *\n * @constructor ObjectId\n */\n\nvar ObjectId = require('../drivers').ObjectId;\n\n/*!\n * Getter for convenience with populate, see gh-6115\n */\n\nObject.defineProperty(ObjectId.prototype, '_id', {\n  enumerable: false,\n  configurable: true,\n  get: function () {\n    return this;\n  }\n});\n\nmodule.exports = ObjectId;","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":0}},{"name":"ObjectId","generated":{"line":11,"column":4},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":4}},{"name":"require","generated":{"line":11,"column":15},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":15}},{"generated":{"line":11,"column":23},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":23}},{"generated":{"line":11,"column":35},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":15}},{"name":"ObjectId","generated":{"line":11,"column":37},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":37}},{"generated":{"line":11,"column":45},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":11,"column":0}},{"generated":{"line":13,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":13,"column":0}},{"name":"Object","generated":{"line":17,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":0}},{"name":"defineProperty","generated":{"line":17,"column":7},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":7}},{"generated":{"line":17,"column":21},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":0}},{"name":"ObjectId","generated":{"line":17,"column":22},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":22}},{"name":"prototype","generated":{"line":17,"column":31},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":31}},{"generated":{"line":17,"column":40},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":0}},{"generated":{"line":17,"column":42},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":42}},{"generated":{"line":17,"column":47},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":0}},{"generated":{"line":17,"column":49},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":49}},{"name":"enumerable","generated":{"line":18,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":18,"column":2}},{"generated":{"line":18,"column":14},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":18,"column":14}},{"generated":{"line":18,"column":19},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":49}},{"name":"configurable","generated":{"line":19,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":19,"column":2}},{"generated":{"line":19,"column":16},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":19,"column":16}},{"generated":{"line":19,"column":20},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":49}},{"name":"get","generated":{"line":20,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":20,"column":2}},{"generated":{"line":20,"column":7},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":20,"column":7}},{"generated":{"line":20,"column":19},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":20,"column":18}},{"generated":{"line":21,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":21,"column":4}},{"generated":{"line":21,"column":11},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":21,"column":11}},{"generated":{"line":21,"column":15},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":21,"column":4}},{"generated":{"line":22,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":22,"column":3}},{"generated":{"line":23,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":49}},{"generated":{"line":23,"column":1},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":17,"column":0}},{"name":"module","generated":{"line":25,"column":0},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":25,"column":0}},{"name":"exports","generated":{"line":25,"column":7},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":25,"column":7}},{"generated":{"line":25,"column":14},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":25,"column":0}},{"name":"ObjectId","generated":{"line":25,"column":17},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":25,"column":17}},{"generated":{"line":25,"column":25},"source":"lab-cody/node_modules/mongoose/lib/types/objectid.js","original":{"line":25,"column":0}}],"sources":{"lab-cody/node_modules/mongoose/lib/types/objectid.js":"/**\n * ObjectId type constructor\n *\n * ####Example\n *\n *     var id = new mongoose.Types.ObjectId;\n *\n * @constructor ObjectId\n */\n\nvar ObjectId = require('../drivers').ObjectId;\n\n/*!\n * Getter for convenience with populate, see gh-6115\n */\n\nObject.defineProperty(ObjectId.prototype, '_id', {\n  enumerable: false,\n  configurable: true,\n  get: function() {\n    return this;\n  }\n});\n\nmodule.exports = ObjectId;\n"},"lineCount":null}},"hash":"5cee9b92f41598cf377678044da9e6a8","cacheData":{"env":{}}}