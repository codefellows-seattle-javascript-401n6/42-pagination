{"dependencies":[{"name":"/Users/codygreen/codefellows/401/labs/42-pagination/lab-cody/node_modules/mongoose/package.json","includedInParent":true,"mtime":1527551477000},{"name":"assert","loc":{"line":5,"column":23}},{"name":"mquery","loc":{"line":6,"column":23}}],"generated":{"js":"var global = arguments[3];\n/*!\n * ignore\n */\n\nconst assert = require('assert');\nconst mquery = require('mquery');\n\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\nvar store = {\n  _promise: null\n};\n\n/**\n * Get the current promise constructor\n *\n * @api private\n */\n\nstore.get = function () {\n  return store._promise;\n};\n\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\nstore.set = function (lib) {\n  assert.ok(typeof lib === 'function', 'mongoose.Promise must be a function, got ' + lib);\n  store._promise = lib;\n  mquery.Promise = lib;\n};\n\n/*!\n * Use native promises by default\n */\n\nstore.set(global.Promise);\n\nmodule.exports = store;","map":{"mappings":[{"generated":{"line":2,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":1,"column":0}},{"generated":{"line":6,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":5,"column":0}},{"name":"assert","generated":{"line":6,"column":6},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":5,"column":6}},{"name":"require","generated":{"line":6,"column":15},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":5,"column":15}},{"generated":{"line":6,"column":23},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":5,"column":23}},{"generated":{"line":6,"column":31},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":5,"column":15}},{"generated":{"line":6,"column":32},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":5,"column":0}},{"generated":{"line":7,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":6,"column":0}},{"name":"mquery","generated":{"line":7,"column":6},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":6,"column":6}},{"name":"require","generated":{"line":7,"column":15},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":6,"column":15}},{"generated":{"line":7,"column":23},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":6,"column":23}},{"generated":{"line":7,"column":31},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":6,"column":15}},{"generated":{"line":7,"column":32},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":6,"column":0}},{"generated":{"line":9,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":14,"column":0}},{"name":"store","generated":{"line":15,"column":4},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":14,"column":4}},{"generated":{"line":15,"column":12},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":14,"column":12}},{"name":"_promise","generated":{"line":16,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":15,"column":2}},{"generated":{"line":16,"column":12},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":15,"column":12}},{"generated":{"line":17,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":14,"column":12}},{"generated":{"line":17,"column":1},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":14,"column":0}},{"generated":{"line":19,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":18,"column":0}},{"name":"store","generated":{"line":25,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":24,"column":0}},{"name":"get","generated":{"line":25,"column":6},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":24,"column":6}},{"generated":{"line":25,"column":9},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":12},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":24,"column":12}},{"generated":{"line":25,"column":24},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":24,"column":23}},{"generated":{"line":26,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":25,"column":2}},{"name":"store","generated":{"line":26,"column":9},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":25,"column":9}},{"name":"_promise","generated":{"line":26,"column":15},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":25,"column":15}},{"generated":{"line":26,"column":23},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":25,"column":2}},{"generated":{"line":27,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":26,"column":1}},{"generated":{"line":27,"column":1},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":24,"column":0}},{"generated":{"line":29,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":28,"column":0}},{"name":"store","generated":{"line":35,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":0}},{"name":"set","generated":{"line":35,"column":6},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":6}},{"generated":{"line":35,"column":9},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":12},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":12}},{"name":"lib","generated":{"line":35,"column":22},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":21}},{"generated":{"line":35,"column":25},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":12}},{"generated":{"line":35,"column":27},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":26}},{"name":"assert","generated":{"line":36,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":2}},{"name":"ok","generated":{"line":36,"column":9},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":9}},{"generated":{"line":36,"column":11},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":2}},{"generated":{"line":36,"column":12},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":12}},{"name":"lib","generated":{"line":36,"column":19},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":19}},{"generated":{"line":36,"column":22},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":12}},{"generated":{"line":36,"column":27},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":27}},{"generated":{"line":36,"column":37},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":2}},{"name":"lib","generated":{"line":36,"column":85},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":36,"column":48}},{"generated":{"line":36,"column":88},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":35,"column":2}},{"name":"store","generated":{"line":37,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":37,"column":2}},{"name":"_promise","generated":{"line":37,"column":8},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":37,"column":8}},{"generated":{"line":37,"column":16},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":37,"column":2}},{"name":"lib","generated":{"line":37,"column":19},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":37,"column":19}},{"generated":{"line":37,"column":22},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":37,"column":2}},{"name":"mquery","generated":{"line":38,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":38,"column":2}},{"name":"Promise","generated":{"line":38,"column":9},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":38,"column":9}},{"generated":{"line":38,"column":16},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":38,"column":2}},{"name":"lib","generated":{"line":38,"column":19},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":38,"column":19}},{"generated":{"line":38,"column":22},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":38,"column":2}},{"generated":{"line":39,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":39,"column":1}},{"generated":{"line":39,"column":1},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":41,"column":0}},{"name":"store","generated":{"line":45,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":45,"column":0}},{"name":"set","generated":{"line":45,"column":6},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":45,"column":6}},{"generated":{"line":45,"column":9},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":45,"column":0}},{"name":"global","generated":{"line":45,"column":10},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":45,"column":10}},{"name":"Promise","generated":{"line":45,"column":17},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":45,"column":17}},{"generated":{"line":45,"column":24},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":45,"column":0}},{"name":"module","generated":{"line":47,"column":0},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":47,"column":0}},{"name":"exports","generated":{"line":47,"column":7},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":47,"column":7}},{"generated":{"line":47,"column":14},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":47,"column":0}},{"name":"store","generated":{"line":47,"column":17},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":47,"column":17}},{"generated":{"line":47,"column":22},"source":"lab-cody/node_modules/mongoose/lib/promise_provider.js","original":{"line":47,"column":0}}],"sources":{"lab-cody/node_modules/mongoose/lib/promise_provider.js":"/*!\n * ignore\n */\n\nconst assert = require('assert');\nconst mquery = require('mquery');\n\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\nvar store = {\n  _promise: null\n};\n\n/**\n * Get the current promise constructor\n *\n * @api private\n */\n\nstore.get = function() {\n  return store._promise;\n};\n\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\nstore.set = function(lib) {\n  assert.ok(typeof lib === 'function',\n    `mongoose.Promise must be a function, got ${lib}`);\n  store._promise = lib;\n  mquery.Promise = lib;\n};\n\n/*!\n * Use native promises by default\n */\n\nstore.set(global.Promise);\n\nmodule.exports = store;\n"},"lineCount":null}},"hash":"4d244a4301e0635b37a3e792ed559847","cacheData":{"env":{}}}