{"dependencies":[{"name":"/Users/codygreen/codefellows/401/labs/42-pagination/lab-cody/node_modules/mquery/package.json","includedInParent":true,"mtime":1516470436000}],"generated":{"js":"'use strict';\n\n/**\n * methods a collection must implement\n */\n\nvar methods = [\n    'find'\n  , 'findOne'\n  , 'update'\n  , 'updateMany',\n  , 'updateOne'\n  , 'replaceOne'\n  , 'remove'\n  , 'count'\n  , 'distinct'\n  , 'findAndModify'\n  , 'aggregate'\n  , 'findStream'\n  , 'deleteOne'\n  , 'deleteMany'\n];\n\n/**\n * Collection base class from which implementations inherit\n */\n\nfunction Collection () {}\n\nfor (var i = 0, len = methods.length; i < len; ++i) {\n  var method = methods[i];\n  Collection.prototype[method] = notImplemented(method);\n}\n\nmodule.exports = exports = Collection;\nCollection.methods = methods;\n\n/**\n * creates a function which throws an implementation error\n */\n\nfunction notImplemented (method) {\n  return function () {\n    throw new Error('collection.' + method + ' not implemented');\n  }\n}\n","map":{"mappings":[{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"lab-cody/node_modules/mquery/lib/collection/collection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"lab-cody/node_modules/mquery/lib/collection/collection.js":"'use strict';\n\n/**\n * methods a collection must implement\n */\n\nvar methods = [\n    'find'\n  , 'findOne'\n  , 'update'\n  , 'updateMany',\n  , 'updateOne'\n  , 'replaceOne'\n  , 'remove'\n  , 'count'\n  , 'distinct'\n  , 'findAndModify'\n  , 'aggregate'\n  , 'findStream'\n  , 'deleteOne'\n  , 'deleteMany'\n];\n\n/**\n * Collection base class from which implementations inherit\n */\n\nfunction Collection () {}\n\nfor (var i = 0, len = methods.length; i < len; ++i) {\n  var method = methods[i];\n  Collection.prototype[method] = notImplemented(method);\n}\n\nmodule.exports = exports = Collection;\nCollection.methods = methods;\n\n/**\n * creates a function which throws an implementation error\n */\n\nfunction notImplemented (method) {\n  return function () {\n    throw new Error('collection.' + method + ' not implemented');\n  }\n}\n"},"lineCount":47}},"hash":"7901d2f1925c3875da223e74de5b3332","cacheData":{"env":{}}}