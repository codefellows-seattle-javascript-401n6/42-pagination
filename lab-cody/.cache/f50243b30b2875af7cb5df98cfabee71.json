{"dependencies":[{"name":"/Users/codygreen/codefellows/401/labs/42-pagination/lab-cody/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1525800892000},{"name":"util","loc":{"line":3,"column":19}}],"generated":{"js":"'use strict';\n\nvar util = require('util');\n\n/**\n * Creates a new MongoError\n * @class\n * @augments Error\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @return {MongoError} A MongoError instance\n */\nfunction MongoError(message) {\n  var tmp = Error.apply(this, arguments);\n  tmp.name = this.name = 'MongoError';\n\n  if (message instanceof Error) {\n    this.message = message.message;\n    this.stack = message.stack;\n  } else {\n    if (typeof message === 'string') {\n      this.message = message;\n    } else {\n      this.message = message.message || message.errmsg || message.$err || 'n/a';\n      for (var name in message) {\n        this[name] = message[name];\n      }\n    }\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\nutil.inherits(MongoError, Error);\n\n/**\n * Creates a new MongoError object\n * @method\n * @param {Error|string|object} options The options used to create the error.\n * @return {MongoError} A MongoError instance\n * @deprecated Use `new MongoError()` instead.\n */\nMongoError.create = function(options) {\n  return new MongoError(options);\n};\n\n/**\n * Creates a new MongoNetworkError\n * @class\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @return {MongoNetworkError} A MongoNetworkError instance\n * @extends {MongoError}\n */\nvar MongoNetworkError = function(message) {\n  MongoError.call(this, message);\n  this.name = 'MongoNetworkError';\n};\nutil.inherits(MongoNetworkError, MongoError);\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n *\n * @class\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @return {MongoParseError} A MongoNetworkError instance\n * @extends {MongoError}\n */\nconst MongoParseError = function(message) {\n  MongoError.call(this, message);\n  this.name = 'MongoParseError';\n};\nutil.inherits(MongoParseError, MongoError);\n\nmodule.exports = {\n  MongoError: MongoError,\n  MongoNetworkError: MongoNetworkError,\n  MongoParseError: MongoParseError\n};\n","map":{"mappings":[{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"lab-cody/node_modules/mongodb-core/lib/error.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}}],"sources":{"lab-cody/node_modules/mongodb-core/lib/error.js":"'use strict';\n\nvar util = require('util');\n\n/**\n * Creates a new MongoError\n * @class\n * @augments Error\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @return {MongoError} A MongoError instance\n */\nfunction MongoError(message) {\n  var tmp = Error.apply(this, arguments);\n  tmp.name = this.name = 'MongoError';\n\n  if (message instanceof Error) {\n    this.message = message.message;\n    this.stack = message.stack;\n  } else {\n    if (typeof message === 'string') {\n      this.message = message;\n    } else {\n      this.message = message.message || message.errmsg || message.$err || 'n/a';\n      for (var name in message) {\n        this[name] = message[name];\n      }\n    }\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\nutil.inherits(MongoError, Error);\n\n/**\n * Creates a new MongoError object\n * @method\n * @param {Error|string|object} options The options used to create the error.\n * @return {MongoError} A MongoError instance\n * @deprecated Use `new MongoError()` instead.\n */\nMongoError.create = function(options) {\n  return new MongoError(options);\n};\n\n/**\n * Creates a new MongoNetworkError\n * @class\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @return {MongoNetworkError} A MongoNetworkError instance\n * @extends {MongoError}\n */\nvar MongoNetworkError = function(message) {\n  MongoError.call(this, message);\n  this.name = 'MongoNetworkError';\n};\nutil.inherits(MongoNetworkError, MongoError);\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n *\n * @class\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @return {MongoParseError} A MongoNetworkError instance\n * @extends {MongoError}\n */\nconst MongoParseError = function(message) {\n  MongoError.call(this, message);\n  this.name = 'MongoParseError';\n};\nutil.inherits(MongoParseError, MongoError);\n\nmodule.exports = {\n  MongoError: MongoError,\n  MongoNetworkError: MongoNetworkError,\n  MongoParseError: MongoParseError\n};\n"},"lineCount":83}},"hash":"e53217d09a209cb65f85bf9b07692c03","cacheData":{"env":{}}}